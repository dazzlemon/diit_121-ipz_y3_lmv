{"ast":null,"code":"var _jsxFileName = \"/home/dazzlemon/github/diit_121-ipz_y3_lmv/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { View, Text, StyleSheet, Button, TextInput, ImageBackground } from 'react-native';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst bgImage = process.env.PUBLIC_URL + '/assets/images/bg.jpg';\n\nconst ReactApp = () => {\n  _s();\n\n  const [counter, setCounter] = useState(0);\n  return /*#__PURE__*/_jsxDEV(ImageBackground, {\n    source: bgImage,\n    style: styles.bg,\n    children: /*#__PURE__*/_jsxDEV(View, {\n      style: styles.screen,\n      children: /*#__PURE__*/_jsxDEV(View, {\n        style: styles.box,\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          style: styles.textMain,\n          children: \"Create an account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(View, {\n          children: [/*#__PURE__*/_jsxDEV(Text, {\n            style: styles.textInputTitle,\n            children: \"email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextInput, {\n            style: styles.input\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(View, {\n          children: [/*#__PURE__*/_jsxDEV(Text, {\n            style: styles.textInputTitle,\n            children: \"username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextInput, {\n            style: styles.input\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          style: styles.textInputTitle,\n          children: \"password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextInput, {\n          style: styles.input\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          style: styles.textInputTitle,\n          children: \"date of birth\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextInput, {\n          style: styles.input\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          title: \"Continue\",\n          color: \"#6665d2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          style: styles.clickableText,\n          children: \"Already have an account?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          style: styles.tosText,\n          children: ['By registering, you agree to AppName ', /*#__PURE__*/_jsxDEV(Text, {\n            style: styles.clickableText,\n            children: \"Terms of Service\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this), ' and ', /*#__PURE__*/_jsxDEV(Text, {\n            style: styles.clickableText,\n            children: \"Privacy Policy\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this), \".\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ReactApp, \"mgO7WMHyhiBnLtH7uw/qAj2Cy9A=\");\n\n_c = ReactApp;\nconst styles = StyleSheet.create({\n  input: {\n    borderWidth: 1,\n    borderColor: '#000000',\n    borderRadius: 5,\n    height: 40,\n    margin: 2,\n    backgroundColor: '#1e1e1e'\n  },\n  box: {\n    padding: 60,\n    backgroundColor: '#1e2124',\n    borderRadius: 7,\n    justifyContent: 'space-between'\n  },\n  textMain: {\n    color: '#ffffff',\n    fontSize: 24,\n    fontWeight: 'bold',\n    textAlign: 'center'\n  },\n  textInputTitle: {\n    fontSize: 18,\n    color: '#707070'\n  },\n  screen: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginTop: 150\n  },\n  bg: {\n    flex: 1,\n    height: '100%',\n    width: '100%',\n    resizeMode: 'stretch',\n    position: 'absolute',\n    inset: '0 0 0 0'\n  },\n  clickableText: {\n    color: '#30b2fd'\n  },\n  tosText: {\n    color: '#404040',\n    fontSize: 12\n  }\n});\nexport default ReactApp;\n\nvar _c;\n\n$RefreshReg$(_c, \"ReactApp\");","map":{"version":3,"sources":["/home/dazzlemon/github/diit_121-ipz_y3_lmv/src/App.js"],"names":["React","useState","View","Text","StyleSheet","Button","TextInput","ImageBackground","bgImage","process","env","PUBLIC_URL","ReactApp","counter","setCounter","styles","bg","screen","box","textMain","textInputTitle","input","clickableText","tosText","create","borderWidth","borderColor","borderRadius","height","margin","backgroundColor","padding","justifyContent","color","fontSize","fontWeight","textAlign","flex","alignItems","marginTop","width","resizeMode","position","inset"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { View, Text, StyleSheet, Button, TextInput, ImageBackground } from 'react-native';\n\nconst bgImage = process.env.PUBLIC_URL + '/assets/images/bg.jpg';\n\nconst ReactApp = () => {\n  const [counter, setCounter] = useState(0);\n  return (\n    <ImageBackground\n      source = {bgImage}\n      style = {styles.bg}\n    >\n      <View style = {styles.screen}>\n        <View style = {styles.box}>\n          <Text\n            style = {styles.textMain}\n          >\n            Create an account\n          </Text>\n\n          <View>\n            <Text\n              style = {styles.textInputTitle}\n            >\n              email\n            </Text>\n            <TextInput\n              style = {styles.input}\n            />\n          </View>\n\n          <View>\n            <Text\n              style = {styles.textInputTitle}\n            >\n              username\n            </Text>\n            <TextInput\n              style = {styles.input}\n            />\n          </View>\n\n          <Text\n            style = {styles.textInputTitle}\n          >\n            password\n          </Text>\n          <TextInput\n            style = {styles.input}\n          />\n\n          <Text\n            style = {styles.textInputTitle}\n          >\n            date of birth\n          </Text>\n          <TextInput\n            style = {styles.input}\n          />\n\n          <Button\n            title = 'Continue'\n            color = '#6665d2'\n          />\n          <Text style = {styles.clickableText}>\n            Already have an account?\n          </Text>\n\n          <Text style = {styles.tosText}>\n            {'By registering, you agree to AppName '}\n            <Text style = {styles.clickableText}>Terms of Service</Text>\n            {' and '} \n            <Text style = {styles.clickableText}>Privacy Policy</Text>\n            .\n          </Text>\n\n        </View>\n      </View>\n    </ImageBackground>\n  )\n};\n\nconst styles = StyleSheet.create({\n  input: {\n    borderWidth: 1,\n    borderColor: '#000000',\n    borderRadius: 5,\n    height: 40,\n    margin: 2,\n    backgroundColor: '#1e1e1e',\n  },\n  box: {\n    padding: 60,\n    backgroundColor: '#1e2124',\n    borderRadius: 7,\n    justifyContent: 'space-between',\n  },\n  textMain: {\n    color: '#ffffff',\n    fontSize: 24,\n    fontWeight: 'bold',\n    textAlign: 'center',\n  },\n  textInputTitle: {\n    fontSize: 18,\n    color: '#707070',\n  },\n  screen: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginTop: 150,\n  },\n  bg: {\n    flex: 1,\n    height: '100%',\n    width: '100%',\n    resizeMode: 'stretch',\n    position: 'absolute',\n    inset: '0 0 0 0',\n  },\n  clickableText: {\n    color: '#30b2fd',\n  },\n  tosText: {\n    color: '#404040',\n    fontSize: 12,\n  },\n});\n\nexport default ReactApp;"]},"metadata":{},"sourceType":"module"}