{"version":3,"sources":["webpages/Home.js","theme/colors.js","theme/sizes.js","theme/styles.js","components/CheckInput.js","components/BoxedBg.js","components/Chat.js","components/ChatList.js","webpages/Register.js","webpages/Login.js","webpages/Chat.js","webpages/Settings.js","App.js","reportWebVitals.js","index.js"],"names":["Home","colors","borderColor","itemBg","white","itemFontColor","errorRed","sizes","height","borderRadius","borderWidth","styles","StyleSheet","create","input","backgroundColor","color","fontSize","borderStyle","picker","fontWeight","box","flexGrow","padding","textMain","textAlign","textInputTitle","textTransform","marginBottom","bg","alignItems","justifyContent","flex","width","resizeMode","position","inset","clickableText","tosText","marginTop","inBox","button","buttonText","clickableTextHover","textDecorationLine","cursor","textInputError","CheckInput","props","errorMessage","isRequiredError","isError","View","style","Text","title","TextInput","spellCheck","onChangeText","secureTextEntry","BoxedBg","ImageBackground","source","process","ScrollView","content","StyledBubble","wrapperStyle","right","left","containerToPreviousStyle","borderTopRightRadius","borderTopLeftRadius","containerToNextStyle","borderBottomRightRadius","borderBottomLeftRadius","textStyle","InputToolbar","useState","isInput","setIsInput","inputMessage","setInputMessage","linesCount","setLinesCount","sendMessage","_id","text","createdAt","Date","user","currentUser","messageInputView","TouchableOpacity","messageSendView","onPress","alert","size","defaultValue","inputContainerStyle","messageInput","outline","value","placeholder","Math","max","min","split","length","onSubmitEditing","onFocus","onBlur","autoFocus","blurOnSubmit","multiline","container","display","flexDirection","paddingTop","paddingHorizontal","paddingVertical","Chat","messages","minInputToolbarHeight","renderInputToolbar","renderBubble","onPressAvatar","Toolbar","navigate","useNavigate","toolbarButton","avatar","chatName","messageAuthor","message","ChatItem","Image","uri","lastMessage","author","ChatList","FlatList","data","chats","renderItem","item","name","date","openChat","RegisterForm","hasAccount","setHasAccount","isReadingTos","setIsReadingTos","isReadingPp","setIsReadingPp","email","setEmail","username","setUsername","password","setPassword","birthday","setBirthday","birthMonth","setBirthMonth","getFullYear","birthYear","setBirthYear","noEmail","setNoEmail","isEmailValid","setIsEmailValid","isEmailRegistered","setIsEmailRegistered","isValidBirthday","setIsValidBirthday","noUsername","setNoUsername","noPassword","setNoPassword","onValueChange","val","id","Item","label","marginHorizontal","noEmail_","isEmailValid_","test","toLowerCase","isEmailRegistered_","birthdate","isValidBirthday_","getDate","getMonth","hashCode","toDateString","register","onMouseEnter","onMouseLeave","to","underlayColor","String","prototype","hash","this","i","charCodeAt","Register","LoginForm","needsAccount","setNeedsAccount","forgotPassword","setForgotPassword","badCredentials","setBadCredentials","emailDoesntExist","setEmailDoesntExist","Login","ChatPage","u2","u1","reverse","setMessages","messages_","GiftedChat","append","Dimensions","get","aspectRatio","setAspectRatio","useEffect","subscription","addEventListener","window","remove","mobileShowChat","setMobileShowChat","renderChatList","renderChat","itemBgColor","styleText","mainContent","paddingLeft","header","fontStyle","profileBox","marginVertical","blueButton","blackButton","margin","mainInfoBox","lignItems","itemTitle","marginLeft","marginRight","MyText","styled","Settings","selectedId","setSelectedId","textColor","titleBackgroundColor","keyExtractor","extraData","alignSelf","App","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"yMASeA,EARF,WACT,OACI,gCACI,qCACA,sD,0DCGGC,EARA,CACXC,YAAa,UACbC,OAAQ,UACRC,MAAO,UACPC,cAAe,UACfC,SAAU,WCCCC,EAND,CACVC,OAAQ,GACRC,aAAc,EACdC,YAAa,G,QCkFFC,EAjFAC,IAAWC,OAAO,CAC7BC,MAAO,CACHJ,YAAaH,EAAMG,YACnBR,YAAaD,EAAOC,YACpBO,aAAcF,EAAME,aACpBD,OAAQD,EAAMC,OACdO,gBAAiBd,EAAOE,OACxBa,MAAOf,EAAOI,cACdY,SAAU,GACVC,YAAa,SAEjBC,OAAQ,CACJJ,gBAAiBd,EAAOE,OACxBD,YAAaD,EAAOC,YACpBQ,YAAaH,EAAMG,YACnBF,OAAQD,EAAMC,OACdQ,MAAOf,EAAOI,cACde,WAAY,OACZX,aAAcF,EAAME,aACpBS,YAAa,SAEjBG,IAAK,CACDC,SAAU,EACVC,QAAS,GACTR,gBAAiB,UACjBN,aAAc,GAElBe,SAAU,CACNR,MAAOf,EAAOG,MACda,SAAU,GACVG,WAAY,OACZK,UAAW,UAEfC,eAAgB,CACZC,cAAe,YACfV,SAAU,GACVD,MAAOf,EAAOI,cACduB,aAAc,EACdR,WAAY,QAEhBS,GAAI,CACAC,WAAY,SACZC,eAAgB,SAChBC,KAAM,EACNxB,OAAQ,OACRyB,MAAO,OACPC,WAAY,UACZC,SAAU,WACVC,MAAO,WAEXC,cAAe,CACXrB,MAAO,WAEXsB,QAAS,CACLtB,MAAO,UACPC,SAAU,GACVsB,UAAW,IAEfC,MAAO,CACHjB,QAAS,GAEbkB,OAAQ,CACJhC,aAAcF,EAAME,aACpBM,gBAAiB,UACjBP,OAAQD,EAAMC,QAElBkC,WAAY,CACR1B,MAAOf,EAAOG,MACdqB,UAAW,SACXF,QAAS,GACTH,WAAY,QAEhBuB,mBAAoB,CAChBC,mBAAoB,YACpBC,OAAQ,WAEZC,eAAgB,CACZ9B,MAAQf,EAAOK,YCtDRyC,EAxBI,SAACC,GAAW,IAAD,IACtBC,EAAeD,EAAME,gBAAkB,yBAAxB,UAC2BF,EAAMC,oBADjC,aAC2B,OAAAD,GAC1CG,EAA0B,MAAhBF,EACd,OACI,eAACG,EAAA,EAAD,CAAMC,MAAS1C,EAAO6B,MAAtB,UACA,eAACc,EAAA,EAAD,CAAMD,MAAS1C,EAAOe,eAAtB,UACKsB,EAAMO,MACP,cAACD,EAAA,EAAD,CAAMD,MAAS1C,EAAOmC,eAAtB,SACCK,EAAU,MAAQF,EACL,UAGlB,cAACO,EAAA,EAAD,CACIC,YAAc,EACdJ,MAASF,EAAU,CAACxC,EAAOG,MAAO,CAACZ,YAAaD,EAAOK,SAAUI,YAAa,IAC5DC,EAAOG,MACzB4C,aAAgBV,EAAMU,aACtBC,gBAAe,UAAIX,EAAMW,uBAAV,QAA6B,W,iBCLzCC,EAXC,SAACZ,GAAD,OACZ,cAACa,EAAA,EAAD,CACIC,OAJQC,4CAKRV,MAAS1C,EAAOkB,GAFpB,SAII,cAACmC,EAAA,EAAD,CAAYX,MAAS1C,EAAOU,IAA5B,SACK2B,EAAMiB,a,yCCObC,G,OAAe,SAAClB,GACpB,OACE,cAAC,IAAD,2BACMA,GADN,IAGEmB,aAAc,CACZC,MAAO,CAAErD,gBAAiB,UAAWN,aAAc,IACnD4D,KAAM,CAAEtD,gBAAiB,UAAWN,aAAc,KAGpD6D,yBAA0B,CACxBF,MAAO,CAAEG,qBAAsB,GAC/BF,KAAM,CAAEG,oBAAqB,IAE/BC,qBAAsB,CACpBL,MAAO,CAAEM,wBAAyB,GAClCL,KAAM,CAAEM,uBAAwB,IAGlCC,UAAW,CACTP,KAAM,CAAErD,MAAO,OAAQC,SAAU,IACjCmD,MAAO,CAAEpD,MAAO,OAAQC,SAAU,UAMpC4D,EAAe,SAAC7B,GACpB,MAA8B8B,oBAAS,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAAwCF,mBAAS,IAAjD,mBAAOG,EAAP,KAAqBC,EAArB,KACA,EAAoCJ,mBAAS,GAA7C,mBAAOK,EAAP,KAAmBC,EAAnB,KAEMC,EAAc,WACE,IAAhBJ,IACFjC,EAAMqC,YAAY,CAAC,CAACC,IAAK,EACvBC,KAAMN,EACNO,UAAW,IAAIC,KACfC,KAAM1C,EAAM2C,eAEdT,EAAgB,IAChBE,EAAc,KASlB,OACE,eAAChC,EAAA,EAAD,CAAMC,MAAO1C,EAAOiF,iBAApB,UACE,cAACC,EAAA,EAAD,CACExC,MAAO1C,EAAOmF,gBACdC,QAAS,kBAAMC,MAAM,gBAFvB,SAIE,cAAC,IAAD,CAAgBC,KAAK,SAEvB,cAACJ,EAAA,EAAD,CACExC,MAAO1C,EAAOmF,gBACdC,QAAS,kBAAMC,MAAM,sBAFvB,SAIE,cAAC,IAAD,CAAoBC,KAAK,SAE3B,cAACJ,EAAA,EAAD,CACExC,MAAO1C,EAAOmF,gBACdC,QAAS,kBAAMC,MAAM,uBAFvB,SAIE,cAAC,IAAD,CAASC,KAAK,SAEhB,cAACzC,EAAA,EAAD,CACE0C,aAAcjB,EACdkB,oBAAqBxF,EAAOyF,aAC5B/C,MA3BG0B,EAAU,CAACpE,EAAOyF,aAAc,CAACC,QAAS,OAAQ7F,OAAQ,GAAK,GAAK2E,IAC1D,CAACxE,EAAOyF,aAAc,CAAC5F,OAAQ,GAAK,GAAK2E,IA2BtDmB,MAAOrB,EACPsB,YAAY,UACZ7C,aAAc,SAAC6B,GACbL,EAAgBK,GAChBH,EAAcoB,KAAKC,IACjB,EACAD,KAAKE,IACHzB,EAAa0B,MAAM,cAAcC,OAAS,EAC1C,OAINC,gBAAiBxB,EACjByB,QAAS,kBAAM9B,GAAW,IAC1B+B,OAAQ,kBAAM/B,GAAW,IACzBgC,WAAW,EACXC,cAAc,EACdxD,YAAY,EACZyD,WAAW,IAEb,cAACrB,EAAA,EAAD,CACExC,MAAO1C,EAAOmF,gBACdC,QAASV,EAFX,SAIE,cAAC,IAAD,CAAQY,KAAK,aA2BftF,EAASC,IAAWC,OAAO,CAC/BsG,UAAW,CACTnF,KAAM,EACNjB,gBAAiB,WAEnB6E,iBAAkB,CAChBwB,QAAS,OACTC,cAAe,OAIjBjB,aAAc,CACZkB,WAAY,GACZtF,KAAM,EACNuF,kBAAmB,GACnBxG,gBAAiBd,EAAOE,OACxBa,MAAOf,EAAOI,cACdK,YAAa,EACbR,YAAa,eAEf4F,gBAAiB,CACfyB,kBAAmB,GACnBxF,eAAgB,WAChByF,gBAAiB,EACjBzG,gBAAiBd,EAAOE,OACxBa,MAAOf,EAAOI,iBAIHoH,EAlDF,SAACzE,GACZ,OACE,eAACI,EAAA,EAAD,CAAMC,MAAO1C,EAAOwG,UAApB,UACE,cAAC,IAAD,CACEO,SAAU1E,EAAM0E,SAChBhC,KAAM,CAACJ,IAAK,GACZqC,sBAAuB,EACvBC,mBAAoB,kBAAM,MAC1BC,aAAc,SAAC7E,GAAD,OACZ,cAAC,EAAD,eAAkBA,KAEpB8E,cAAe,SAACpC,GAAD,OAAUM,MAAM,gCAAD,OAAiCN,EAAKJ,SAEtE,cAAC,EAAD,CACED,YAAarC,EAAMqC,YACnBM,YAAa3C,EAAM2C,kB,kCChIrBoC,EAAU,SAAC/E,GACf,IAAIgF,EAAWC,cAEf,OACE,eAAC7E,EAAA,EAAD,CACEC,MAAO,CACL+D,QAAS,OACTC,cAAe,MACftG,gBAAiB,WAJrB,UAOE,cAAC,IAAD,CACEsC,MAAO1C,EAAOuH,cACdnC,QAAS,kBAAMiC,EAAS,cAF1B,SAIE,cAAC,IAAD,CAAc/B,KAAM,OAEtB,cAAC,IAAD,CACE5C,MAAO1C,EAAOuH,cACdnC,QAAS,kBAAMiC,EAAS,WAF1B,SAIE,cAAC,IAAD,CAAU/B,KAAM,WAMlBtF,EAASC,IAAWC,OAAO,CAC/BsG,UAAW,CACTC,QAAS,OACTC,cAAe,OAEjBc,OAAQ,CACN5G,QAAS,GACTU,MAAO,GACPzB,OAAQ,GACRC,aAAc,IAEhB2H,SAAU,CACRpH,MAAOf,EAAOG,MACdgB,WAAY,OACZH,SAAU,GACVqG,WAAY,IAEde,cAAe,CACbrH,MAAOf,EAAOG,MACdgB,WAAY,QAEdkH,QAAS,CACPtH,MAAOf,EAAOG,MACdgB,WAAY,UAEd8G,cAAe,CACbX,kBAAmB,GACnBxF,eAAgB,WAChByF,gBAAiB,EACjBzG,gBAAiB,UACjBC,MAAOf,EAAOI,iBAIZkI,EAAW,SAACvF,GAChB,OACE,cAAC,IAAD,CAA0B+C,QAAS/C,EAAM+C,QAAzC,SACE,eAAC3C,EAAA,EAAD,CAAMC,MAAO1C,EAAOwG,UAApB,UACE,cAAC/D,EAAA,EAAD,CAAMC,MAAO,CAAC9B,QAAS,IAAvB,SACE,cAACiH,EAAA,EAAD,CACEnF,MAAO1C,EAAOwH,OACdrE,OAAQ,CAAC2E,IAAKzF,EAAMmF,YAGxB,eAAC/E,EAAA,EAAD,WACE,cAACE,EAAA,EAAD,CAAMD,MAAO1C,EAAOyH,SAApB,SAA+BpF,EAAMoF,WACrC,eAAC9E,EAAA,EAAD,CAAMD,MAAO1C,EAAO0H,cAApB,UACGrF,EAAM0F,YAAN,UAAuB1F,EAAM0F,YAAYC,OAAzC,MAAsD,GACvD,cAACrF,EAAA,EAAD,CAAMD,MAAO1C,EAAO2H,QAApB,SACGtF,EAAM0F,YAAN,UAAuB1F,EAAM0F,YAAYnD,MAAS,iBAqClDqD,EA5BE,SAAC5F,GAgBhB,OACE,eAACI,EAAA,EAAD,CAAMC,MAAO,CAAC7C,OAAQ,QAAtB,UACE,cAACqI,EAAA,EAAD,CACExF,MAAO,CAAEtC,gBAAiB,WAC1B+H,KAAM9F,EAAM+F,MACZC,WApBa,SAAC,GAAY,IAAD,MAAVC,EAAU,EAAVA,KACnB,OACE,cAAC,EAAD,CACEd,OAAQc,EAAKd,OACbC,SAAUa,EAAKC,KACfR,YAAaO,EAAKP,YAAc,CAC9BC,OAAM,UAAEM,EAAKP,mBAAP,aAAE,EAAkBhD,KAAKwD,KAC/B3D,KAAI,UAAE0D,EAAKP,mBAAP,aAAE,EAAkBnD,KACxB4D,KAAI,UAAEF,EAAKP,mBAAP,aAAE,EAAkBlD,WACtB,KACJO,QAAS,kBAAM/C,EAAMoG,SAASH,EAAK3D,WAYrC,cAAC,EAAD,QCxGN,IAIM+D,EAAe,WACnB,MAAoCvE,oBAAS,GAA7C,mBAAOwE,EAAP,KAAmBC,EAAnB,KACA,EAAwCzE,oBAAS,GAAjD,mBAAO0E,EAAP,KAAqBC,EAArB,KACA,EAAsC3E,oBAAS,GAA/C,mBAAO4E,EAAP,KAAoBC,EAApB,KACA,EAA0B7E,qBAA1B,mBAAO8E,EAAP,KAAcC,EAAd,KACA,EAAgC/E,qBAAhC,mBAAOgF,EAAP,KAAiBC,EAAjB,KACA,EAAgCjF,qBAAhC,mBAAOkF,EAAP,KAAiBC,EAAjB,KAEA,EAAgCnF,mBAAS,GAAzC,mBAAOoF,EAAP,KAAiBC,EAAjB,KACA,EAAoCrF,mBAAS,GAA7C,mBAAOsF,EAAP,KAAmBC,EAAnB,KACA,EAAkCvF,oBAAS,IAAIW,MAAO6E,eAAtD,mBAAOC,EAAP,KAAkBC,EAAlB,KAEA,EAA8B1F,oBAAS,GAAvC,mBAAO2F,EAAP,KAAgBC,EAAhB,KACA,EAAwC5F,oBAAS,GAAjD,mBAAO6F,EAAP,KAAqBC,EAArB,KACA,GAAkD9F,oBAAS,GAA3D,qBAAO+F,GAAP,MAA0BC,GAA1B,MACA,GAA8ChG,oBAAS,GAAvD,qBAAOiG,GAAP,MAAwBC,GAAxB,MACA,GAAoClG,oBAAS,GAA7C,qBAAOmG,GAAP,MAAmBC,GAAnB,MACA,GAAoCpG,oBAAS,GAA7C,qBAAOqG,GAAP,MAAmBC,GAAnB,MAEA,OACE,qCACE,cAAChI,EAAA,EAAD,CAAMC,MAAS1C,EAAO6B,MAAtB,SACE,cAACc,EAAA,EAAD,CACED,MAAS1C,EAAOa,SADlB,iCAOF,cAAC,EAAD,CACE+B,MAAS,QACTL,gBAAmBuH,EACnBxH,aAAgB,WACd,OAAQ0H,EACDE,GAAoB,mCACpB,KAFoB,iCAI7BnH,aAAgB,SAAC6B,GAAD,OAAUsE,EAAStE,MAGrC,cAAC,EAAD,CACEhC,MAAS,WACTL,gBAAmB+H,GACnBvH,aAAgB,SAAC6B,GAAD,OAAUwE,EAAYxE,MAGxC,cAAC,EAAD,CACEhC,MAAS,WACTL,gBAAmBiI,GACnBzH,aAAgB,SAAC6B,GAAD,OAAU0E,EAAY1E,IACtC5B,iBAAmB,IAGrB,eAACP,EAAA,EAAD,CAAMC,MAAS1C,EAAO6B,MAAtB,UACE,cAACc,EAAA,EAAD,CAAMD,MAAS1C,EAAOe,eAAtB,2BAIA,eAAC0B,EAAA,EAAD,CAAMC,MAAS,CAACgE,cAAe,MAAOpF,MAAO,QAA7C,UAEE,eAAC,IAAD,CACEoB,MAAS,CAAC1C,EAAOQ,OAAQ,CAACc,MAAO,QACjCoJ,cAAiB,SAACC,EAAKC,GAAN,OAAalB,EAAciB,IAF9C,UAIE,cAAC,IAAOE,KAAR,CAAaC,MAAQ,MAAMnF,MAAQ,MACnC,cAAC,IAAOkF,KAAR,CAAaC,MAAQ,MAAMnF,MAAQ,MACnC,cAAC,IAAOkF,KAAR,CAAaC,MAAQ,MAAMnF,MAAQ,SAIrC,eAAC,IAAD,CACEjD,MAAS,CAAC1C,EAAOQ,OAAQ,CAACc,MAAO,MAAOyJ,iBAAkB,QAC1DL,cAAiB,SAACC,EAAKC,GAAN,OAAapB,EAAYmB,IAF5C,UAIE,cAAC,IAAOE,KAAR,CAAaC,MAAQ,IAAInF,MAAQ,MACjC,cAAC,IAAOkF,KAAR,CAAaC,MAAQ,IAAInF,MAAQ,MACjC,cAAC,IAAOkF,KAAR,CAAaC,MAAQ,IAAInF,MAAQ,MACjC,cAAC,IAAOkF,KAAR,CAAaC,MAAQ,KAAKnF,MAAQ,OAClC,cAAC,IAAOkF,KAAR,CAAaC,MAAQ,KAAKnF,MAAQ,OAClC,cAAC,IAAOkF,KAAR,CAAaC,MAAQ,KAAKnF,MAAQ,OAClC,cAAC,IAAOkF,KAAR,CAAaC,MAAQ,KAAKnF,MAAQ,UAIpC,eAAC,IAAD,CACEjD,MAAS,CAAC1C,EAAOQ,OAAQ,CAACc,MAAO,QACjCoJ,cAAiB,SAACC,EAAKC,GAAN,OAAaf,EAAac,IAF7C,UAIE,cAAC,IAAOE,KAAR,CAAaC,MAAQ,OAAOnF,MAAQ,SACpC,cAAC,IAAOkF,KAAR,CAAaC,MAAQ,OAAOnF,MAAQ,SACpC,cAAC,IAAOkF,KAAR,CAAaC,MAAQ,OAAOnF,MAAQ,eAGxC,cAAChD,EAAA,EAAD,CAAMD,MAAS1C,EAAOmC,eAAtB,SACIiI,GACkB,KADA,0CAKxB,eAAC3H,EAAA,EAAD,CAAMC,MAAS1C,EAAO6B,MAAtB,UACE,cAACqD,EAAA,EAAD,CACExC,MAAS1C,EAAO8B,OAChBsD,QAAW,WACT,IAAI4F,EAAoB,MAAT/B,GAA0B,IAATA,EAChCc,EAAWiB,GACX,IAAIC,GAAiBD,GAjHtB,0JACCE,KAgHyCjC,EAhHhCkC,eAiHTlB,EAAgBgB,GAChB,IAAIG,EAAqBH,GAA0B,wBAAThC,EAC1CkB,GAAqBiB,GAErB,IAAIC,EAAY,IAAIvG,KAAK8E,EAAWH,EAAYF,GAC5C+B,EAAmBD,EAAUE,WAAahC,GACvB8B,EAAU1B,eAAiBC,GAC3ByB,EAAUG,YAAc/B,EAC/CY,GAAmBiB,GAEnB,IAAIhB,EAAyB,MAAZnB,GAAgC,IAAZA,EACrCoB,GAAcD,GACd,IAAIE,EAAyB,MAAZnB,GAAgC,IAAZA,EACrCoB,GAAcD,IAEVS,GAAkBG,IAAsBE,GAAqBd,GAAeF,GA6C5F,SAAkBrB,EAAOE,EAAUE,EAAUE,GAC3ClE,MAAM,gBAAD,OACM4D,EADN,2BAESE,EAFT,gCAGcE,EAASoC,WAHvB,2BAISlC,EAASmC,eAJlB,SA7COC,CAAS1C,EAAOE,EAAUE,EAAUgC,IAtB1C,SA0BE,cAAC1I,EAAA,EAAD,CAAMD,MAAS1C,EAAO+B,WAAtB,wBAIF,cAAC,IAAD,CACE6J,aAAgB,kBAAMhD,GAAc,IACpCiD,aAAgB,kBAAMjD,GAAc,IACpCkD,GAAG,SACHC,cAAgB,mBAJlB,SAME,cAACpJ,EAAA,EAAD,CAAMD,MAASiG,EAAa,CAAC3I,EAAO0B,cAAe1B,EAAOgC,oBAC9BhC,EAAO0B,cADnC,wCAMF,eAACiB,EAAA,EAAD,CAAMD,MAAS1C,EAAO2B,QAAtB,UACG,wCACD,cAACgB,EAAA,EAAD,CACEiJ,aAAgB,kBAAM9C,GAAgB,IACtC+C,aAAgB,kBAAM/C,GAAgB,IACtCpG,MAASmG,EAAe,CAAC7I,EAAO0B,cAAe1B,EAAOgC,oBAC9BhC,EAAO0B,cAC/B0D,QAAW,kBAAMC,MAAM,oBALzB,8BAOC,QACD,cAAC1C,EAAA,EAAD,CACEiJ,aAAgB,kBAAM5C,GAAe,IACrC6C,aAAgB,kBAAM7C,GAAe,IACrCtG,MAASqG,EAAc,CAAC/I,EAAO0B,cAAe1B,EAAOgC,oBAC7BhC,EAAO0B,cAC/B0D,QAAW,kBAAMC,MAAM,mBALzB,4BAVF,cAiCR2G,OAAOC,UAAUR,SAAW,WAC1B,IAAIS,EAAO,EACX,GAAmB,GAAfC,KAAKlG,OACL,OAAOiG,EAEX,IAAK,IAAIE,EAAI,EAAGA,EAAID,KAAKlG,OAAQmG,IAAK,CAElCF,GAASA,GAAM,GAAGA,EADPC,KAAKE,WAAWD,GAE3BF,GAAcA,EAElB,OAAOA,GAGMI,MAhME,kBACf,cAAC,EAAD,CAAShJ,QAAW,cAAC,EAAD,OCDhBiJ,EAAY,WACd,MAAwCpI,oBAAS,GAAjD,mBAAOqI,EAAP,KAAqBC,EAArB,KACA,EAA0BtI,mBAAS,IAAnC,mBAAO8E,EAAP,KAAcC,EAAd,KACA,EAAgC/E,mBAAS,IAAzC,mBAAOkF,EAAP,KAAiBC,EAAjB,KACA,EAA8BnF,oBAAS,GAAvC,mBAAO2F,EAAP,KAAgBC,EAAhB,KACA,EAAoC5F,oBAAS,GAA7C,mBAAOqG,EAAP,KAAmBC,EAAnB,KACA,EAA4CtG,oBAAS,GAArD,mBAAOuI,EAAP,KAAuBC,EAAvB,KACA,EAA4CxI,oBAAS,GAArD,mBAAOyI,EAAP,KAAuBC,EAAvB,KACA,EAAgD1I,oBAAS,GAAzD,mBAAO2I,EAAP,KAAyBC,EAAzB,KACI1F,EAAWC,cAEf,OACI,qCACI,cAAC7E,EAAA,EAAD,CAAMC,MAAS1C,EAAO6B,MAAtB,SACI,cAACc,EAAA,EAAD,CACID,MAAS1C,EAAOa,SADpB,6BAOJ,cAAC,EAAD,CACI+B,MAAQ,QACRL,gBAAmBuH,EACnB/G,aAAgB,SAAC6B,GAAD,OAAUsE,EAAStE,IACnCtC,aAAgB,kBAAMsK,EAAmB,+BACnBE,EAAmB,uBACnB,QAG1B,cAAC,EAAD,CACIlK,MAAQ,WACRL,gBAAmBiI,EACnBxH,iBAAmB,EACnBD,aAAgB,SAAC6B,GAAD,OAAU0E,EAAY1E,IACtCtC,aAAgB,kBAAMsK,EAAiB,+BAAiC,QAG5E,cAACnK,EAAA,EAAD,CACIC,MAAS,CAAC1C,EAAO6B,MAAO,CAACD,WAAY,KACrCgK,aAAgB,kBAAMe,GAAkB,IACxCd,aAAgB,kBAAMc,GAAkB,IAH5C,SAKI,cAAChK,EAAA,EAAD,CACID,MAASgK,EAAiB,CAAC1M,EAAO0B,cAAe1B,EAAOgC,oBAC9BhC,EAAO0B,cACjC0D,QAAW,WAEPqF,GAAc,GACdoC,GAAkB,GAElB9C,GAAYd,GACC,wBAATA,GACA8D,GAAoB,GACpB1H,MAAM,sDAAD,OAE/B4D,EAF+B,oFAML8D,GAAoB,IAjBhC,qCAyBJ,eAACtK,EAAA,EAAD,CAAMC,MAAS1C,EAAO6B,MAAtB,UACI,cAACqD,EAAA,EAAD,CACIxC,MAAS1C,EAAO8B,OAChBsD,QAAW,WACPqF,GAAepB,GACfU,GAAYd,GAEPA,GAAUI,IAIF,wBAATJ,GAA+C,SAAZI,EAGnChC,EAAS,SAETwF,GAAkB,KAf9B,SAmBI,cAAClK,EAAA,EAAD,CAAMD,MAAS1C,EAAO+B,WAAtB,qBAMJ,eAACY,EAAA,EAAD,CAAMD,MAAS1C,EAAO2B,QAAtB,UACK,oBACD,cAAC,IAAD,CACImK,GAAK,YACLC,cAAgB,mBAChBH,aAAgB,kBAAMa,GAAgB,IACtCZ,aAAgB,kBAAMY,GAAgB,IAJ1C,SAMI,cAAC9J,EAAA,EAAD,CAAMD,MAAS8J,EAAe,CAACxM,EAAO0B,cAAe1B,EAAOgC,oBAC9BhC,EAAO0B,cADrC,kCAUTsL,EApHD,kBACV,cAAC,EAAD,CAAS1J,QAAW,cAAC,EAAD,O,QCwJT2J,EA1JE,WACf,IAAMC,EAAK,CACTvI,IAAK,EACL4D,KAAM,WACNf,OAAQ,uKAEJ2F,EAAK,CACTxI,IAAK,EACL4D,KAAM,eACNf,OAAQ,wGAGV,EAAgCrD,mBAAS,CACvC,CAAEQ,IAAK,EAAGC,KAAM,aAAcC,UAAW,IAAIC,KAAQC,KAAMoI,GAC3D,CAAExI,IAAK,EAAGC,KAAM,4BAA6BC,UAAW,IAAIC,KAAQC,KAAMmI,GAC1E,CAAEvI,IAAK,EAAGC,KAAM,4BAA6BC,UAAW,IAAIC,KAAQC,KAAMoI,GAC1E,CAAExI,IAAK,EAAGC,KAAK,2BAASC,UAAW,IAAIC,KAAQC,KAAMoI,GACrD,CAAExI,IAAK,EAAGC,KAAK,0BAA4BC,UAAW,IAAIC,KAAQC,KAAMmI,GACxE,CAAEvI,IAAK,EAAGC,KAAK,qCAAuCC,UAAW,IAAIC,KAAQC,KAAMoI,GACnF,CAAExI,IAAK,EAAGC,KAAK,gBAAkBC,UAAW,IAAIC,KAAQC,KAAMmI,GAC9D,CAAEvI,IAAK,EAAGC,KAAK,oBAAsBC,UAAW,IAAIC,KAAQC,KAAMmI,GAClE,CAAEvI,IAAK,EAAGC,KAAK,gDAAkDC,UAAW,IAAIC,KAAQC,KAAMoI,GAC9F,CAAExI,IAAK,GAAIC,KAAK,QAAUC,UAAW,IAAIC,KAAQC,KAAMmI,GACvD,CAAEvI,IAAK,GAAIC,KAAM,IAAKC,UAAW,IAAIC,KAAQC,KAAMoI,GACnD,CAAExI,IAAK,GAAIC,KAAM,IAAKC,UAAW,IAAIC,KAAQC,KAAMoI,GACnD,CAAExI,IAAK,GAAIC,KAAM,IAAKC,UAAW,IAAIC,KAAQC,KAAMoI,GACnD,CAAExI,IAAK,GAAIC,KAAM,IAAKC,UAAW,IAAIC,KAAQC,KAAMmI,GACnD,CAAEvI,IAAK,GAAIC,KAAM,IAAKC,UAAW,IAAIC,KAAQC,KAAMmI,GACnD,CAAEvI,IAAK,GAAIC,KAAM,IAAKC,UAAW,IAAIC,KAAQC,KAAMmI,IACnDE,WAjBF,mBAAOrG,EAAP,KAAiBsG,EAAjB,KA8BA,IAAM3I,EAAc,WAAqB,IAApB4I,EAAmB,uDAAP,GAC/BD,EAAYE,IAAWC,OAAOzG,EAAUuG,KAGpClF,EAAQ,CACZ,CAAEzD,IAAK,EACL4D,KAAM,QACNf,OAAQ,yLACRO,YAAahB,EAAS,IAExB,CAAEpC,IAAK,EACL4D,KAAM,QACNf,OAAQ,wGAEV,CAAE7C,IAAK,EACL4D,KAAM,QACNf,OAAQ,+HAEV,CAAE7C,IAAK,EACL4D,KAAM,QACNf,OAAQ,mFAKZ,EAAsCrD,mBAASsJ,IAAWC,IAAI,UAAUpM,MAAQmM,IAAWC,IAAI,UAAU7N,QAAzG,mBAAO8N,EAAP,KAAoBC,EAApB,KAEAC,qBAAU,WACR,IAAMC,EAAeL,IAAWM,iBAC9B,UACA,YAAiB,IAAdC,EAAa,EAAbA,OACDJ,EAAgBI,EAAO1M,MAAQ0M,EAAOnO,WAG1C,OAAO,yBAAMiO,QAAN,IAAMA,OAAN,EAAMA,EAAcG,aAG7B,MAA4C9J,oBAAS,GAArD,mBAAO+J,EAAP,KAAuBC,EAAvB,KAEM1F,EAAW,SAAC9D,GACL,GAAPA,EACFwJ,GAAkB,GAElB9I,MAAM,qBAAD,OAAsBV,KAIzByJ,EAAiB,kBACrB,cAAC,EAAD,CACEhG,MAAOA,EACPK,SAAUA,KAIR4F,EAAa,kBACjB,cAAC,EAAD,CACE3J,YAAaA,EACbqC,SAAUA,EACV/B,YAAamI,KAgBjB,OAAIQ,EAAc,EAEd,eAAClL,EAAA,EAAD,CAAMC,MAAO,CACXlB,SAAU,WACVC,MAAO,UACPgF,QAAS,QAHX,UAKE,cAAChE,EAAA,EAAD,CAAMC,MAAO,CAAC,cAAe,SAA7B,SACG0L,MAEH,cAAC3L,EAAA,EAAD,CAAMC,MAAO,CAAC,cAAe,SAA7B,SACG2L,SAKLH,EAEA,eAACzL,EAAA,EAAD,CAAMC,MAAO,CACXlB,SAAU,WACVC,MAAO,UACPrB,gBAAiBd,EAAOE,QAH1B,UA7BF,cAACiD,EAAA,EAAD,CAAMC,MAAO,CACX9B,QAAS,EACTR,gBAAiBd,EAAOgP,YACxBjO,MAAOf,EAAOI,eAHhB,SAKE,cAACwF,EAAA,EAAD,CAAkBE,QAAS,kBAAM+I,GAAkB,IAAnD,SACE,cAAC,IAAD,CAAoB7I,KAAK,WA6BxB+I,OAKL,cAAC5L,EAAA,EAAD,CAAMC,MAAO,CACXlB,SAAU,WACVC,MAAO,WAFT,SAIG2M,O,kBCVDpO,EAASC,IAAWC,OAAO,CAE7BqO,UAAW,CACTlO,MAAOf,EAAOI,eAIhB8G,UAAW,CACPnF,KAAM,EACNjB,gBAAiBd,EAAOE,OACxBa,MAAOf,EAAOI,cACd8B,SAAU,WACVC,MAAO,WAEX+M,YAAa,CACXnN,KAAM,GACNjB,gBAAiB,UACjBqO,YAAa,IAEfC,OAAQ,CACNrO,MAAM,UACNC,SAAU,GACVqO,UAAW,QAEbC,WAAY,CACVtN,MAAO,IACPzB,OAAQ,IACRQ,MAAOf,EAAOI,cACdmP,eAAe,GACf9D,iBAAkB,GAClBjL,aAAc,GACd+G,gBAAiB,GACjBzG,gBAAgB,WAElB0O,WAAa,CAEXxN,MAAO,IACPzB,OAAQ,GACRC,aAAc,GACdW,WAAY,OACZH,SAAU,KACVD,MAAOf,EAAOG,MACd2B,eAAgB,SAChBN,UAAW,SACXV,gBAAiB,WAEnB2O,YAAc,CACZzN,MAAO,GACPzB,OAAQ,GACRmP,OAAQ,GACRlP,aAAc,GACdM,gBAAiB,UACjBU,UAAW,SACXT,MAAOf,EAAOG,MACd2B,eAAgB,UAElB6N,YAAa,CACX3N,MAAO,IACPzB,OAAQ,IACRgP,eAAe,GACf9D,iBAAkB,GAClBjL,aAAc,GACd+G,gBAAiB,GACjBzG,gBAAgB,UAChBsG,cAAe,SACftF,eAAgB,gBAChB8N,UAAW,UAEb5G,KAAM,CACJlI,gBAAiBd,EAAOE,OACxBM,aAAcF,EAAME,aACpBc,QAAS,EACTiO,eAAgB,EAChB9D,iBAAkB,IAEpBoE,UAAW,CACT9O,MAAOf,EAAOI,cACdoB,UAAW,OACXhB,aAAc,GACdc,QAAS,EACTwO,WAAY,GACZC,YAAa,GACb/O,SAAU,MAIRgP,EAASC,YAAO5M,IAAM3C,EAAOuO,WACtBiB,EAnOE,WACb,MAAoCrL,mBAAS,MAA7C,mBAAOsL,EAAP,KAAmBC,EAAnB,KAmDQ7E,EAAO,SAAC,GAAD,IAAGvC,EAAH,EAAGA,KAAMlD,EAAT,EAASA,QAAShF,EAAlB,EAAkBA,gBAAiBuP,EAAnC,EAAmCA,UAAWC,EAA9C,EAA8CA,qBAA9C,OACX,cAAC1K,EAAA,EAAD,CAAkBE,QAASA,EAAS1C,MAAO,CAAC1C,EAAOsI,KAAMlI,GAAzD,SACE,cAACkP,EAAD,CAAQ5M,MAAO,CAAC1C,EAAOmP,UAAWQ,EAAWC,GAA7C,SAAqEtH,EAAK1F,WAiB9E,OACE,eAACH,EAAA,EAAD,CAAMC,MAAO,CAAC1C,EAAOwG,UAAW,CAAEE,cAAe,QAAjD,UACE,cAACjE,EAAA,EAAD,UACE,cAACyF,EAAA,EAAD,CACEC,KAzEG,CACT,CACEyC,GAAI,uCACJhI,MAAO,cAET,CACEgI,GAAI,uCACJhI,MAAO,gBAET,CACEgI,GAAI,uCACJhI,MAAO,oBAET,CACEgI,GAAI,4CACJhI,MAAO,mBAET,CACEgI,GAAI,uCACJhI,MAAO,eAET,CACEgI,GAAI,uCACJhI,MAAO,cAET,CACEgI,GAAI,uCACJhI,MAAO,iBAET,CACEgI,GAAI,uCACJhI,MAAO,iBAET,CACEgI,GAAI,uCACJhI,MAAO,iBAET,CACEgI,GAAI,uCACJhI,MAAO,iBAET,CACEgI,GAAI,uCACJhI,MAAO,YAET,CACEgI,GAAI,uCACJhI,MAAO,aA2BHyF,WAlBW,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACdlI,EAAkBkI,EAAKsC,KAAO6E,EAAa,UAAYnQ,EAAOE,OAC9Da,EAAQiI,EAAKsC,KAAO6E,EAAa,QAAUnQ,EAAOI,cACxD,OACE,cAACmL,EAAD,CACA+E,qBAAwB,CAAExP,mBAC1BkI,KAAMA,EACNlD,QAAS,kBAAMsK,EAAcpH,EAAKsC,KAClC+E,UAAW,CAAEtP,YAWTwP,aAAc,SAAAvH,GAAI,OAAIA,EAAKsC,IAC3BkF,UAAWL,MAGhB,eAAChN,EAAA,EAAD,CAAMC,MAAS1C,EAAOwO,YAAtB,UACC,cAACc,EAAD,CAAQ5M,MAAS1C,EAAO0O,OAAxB,0BACA,eAACjM,EAAA,EAAD,CAAMC,MAAS1C,EAAO4O,WAAtB,UAEE,eAACnM,EAAA,EAAD,CAAMC,MAAQ,CAACgE,cAAe,MAAOvF,WAAY,SAAUC,eAAgB,gBAAiB4N,OAAQ,IAApG,UACE,cAAC,IAAD,CAAc1J,KAAM,IAAK5C,MAAS,CAAEsM,OAAQ,EAAEpO,QAAS,KACvD,cAAC0O,EAAD,CAAQ5M,MAAS,CAAErC,MAAMf,EAAOI,cAAe+O,YAAa,GAAInO,SAAU,GAAIG,WAAY,QAA1F,uBAGA,cAACgC,EAAA,EAAD,CAAMC,MAAS,CAACrB,KAAM,IAAtB,SACE,cAAC6D,EAAA,EAAD,CAAkBxC,MAAO,CAAC1C,EAAO8O,WAAY,CAAEiB,UAAW,aAA1D,oCAMJ,eAACtN,EAAA,EAAD,CAAMC,MAAS1C,EAAOiP,YAAtB,UACE,eAACxM,EAAA,EAAD,CAAMC,MAAS,CAACgE,cAAe,OAA/B,UACE,eAACjE,EAAA,EAAD,CAAMC,MAAS,CAACgE,cAAe,SAAW9F,QAAS,GAAnD,UACE,cAAC0O,EAAD,CAAQ5M,MAAO,CAACjC,WAAY,QAA5B,sBACA,cAAC6O,EAAD,CAAQ5M,MAAO,CAACpC,SAAU,IAA1B,qBAEA,cAACmC,EAAA,EAAD,CAAMC,MAAS,CAACrB,KAAM,IAAtB,SACE,cAAC6D,EAAA,EAAD,CAAkBxC,MAAO,CAAC1C,EAAO+O,YAAa,CAACgB,UAAW,aAA1D,uBAMN,eAACtN,EAAA,EAAD,CAAMC,MAAS,CAACgE,cAAe,OAA/B,UACE,eAACjE,EAAA,EAAD,CAAMC,MAAS,CAACgE,cAAe,SAAU9F,QAAS,GAAlD,UACE,cAAC0O,EAAD,CAAQ5M,MAAO,CAACjC,WAAY,QAA5B,mBACA,cAAC6O,EAAD,CAAQ5M,MAAO,CAACpC,SAAU,IAA1B,oCAEA,cAACmC,EAAA,EAAD,CAAMC,MAAS,CAACrB,KAAM,IAAtB,SACE,cAAC6D,EAAA,EAAD,CAAkBxC,MAAO,CAAC1C,EAAO+O,YAAa,CAACgB,UAAW,aAA1D,uBAMN,eAACtN,EAAA,EAAD,CAAMC,MAAS,CAACgE,cAAe,OAA/B,UACE,eAACjE,EAAA,EAAD,CAAMC,MAAS,CAACgE,cAAe,SAAW9F,QAAS,GAAnD,UACE,cAAC0O,EAAD,CAAQ5M,MAAO,CAACjC,WAAY,QAA5B,0BACA,cAAC6O,EAAD,CAAQ5M,MAAO,CAACpC,SAAU,IAA1B,qDAEA,cAACmC,EAAA,EAAD,CAAMC,MAAS,CAACrB,KAAM,IAAtB,SACE,cAAC6D,EAAA,EAAD,CAAkBxC,MAAO,CAAC1C,EAAO+O,YAAa,CAACgB,UAAW,aAA1D,mCCvFLC,EAnCH,WACV,OACE,qCACE,8BACE,8BACE,qBAAIpF,GAAG,aAAP,UACE,6BACE,cAAC,IAAD,CAAMkB,GAAG,IAAT,oBAEF,6BACE,cAAC,IAAD,CAAMA,GAAG,SAAT,qBAEF,6BACE,cAAC,IAAD,CAAMA,GAAG,YAAT,wBAEF,6BACE,cAAC,IAAD,CAAMA,GAAG,QAAT,oBAEF,6BACE,cAAC,IAAD,CAAMA,GAAG,YAAT,+BAKR,eAAC,IAAD,WACE,cAAC,IAAD,CAAOmE,KAAO,IAAYC,QAAS,cAAC,EAAD,MACnC,cAAC,IAAD,CAAOD,KAAO,SAAYC,QAAS,cAAC,EAAD,MACnC,cAAC,IAAD,CAAOD,KAAO,YAAYC,QAAS,cAAC,EAAD,MACnC,cAAC,IAAD,CAAOD,KAAO,QAAYC,QAAS,cAAC,EAAD,MACnC,cAAC,IAAD,CAAOD,KAAO,YAAYC,QAAS,cAAC,EAAD,aC7B5BC,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAASC,OAEL,cAAC,IAAD,UACE,cAAC,EAAD,MAGJC,SAASC,eAAe,SAM1BZ,O","file":"static/js/main.9c8ab90e.chunk.js","sourcesContent":["import React from 'react';\r\nconst Home = () => {\r\n    return (\r\n        <div>\r\n            <h1>App</h1>\r\n            <p>This is home page</p>\r\n        </div>\r\n    );\r\n};\r\nexport default Home;","const colors = {\r\n    borderColor: '#141414',\r\n    itemBg: '#1e1e1e',\r\n    white: '#ffffff',\r\n    itemFontColor: '#707070',\r\n    errorRed: '#ff1f1f',\r\n};\r\n\r\nexport default colors;","const sizes = {\r\n    height: 40,\r\n    borderRadius: 5,\r\n    borderWidth: 1,\r\n}\r\n\r\nexport default sizes;","import colors from './colors';\r\nimport sizes from './sizes';\r\nimport { StyleSheet } from 'react-native';\r\n\r\nconst styles = StyleSheet.create({\r\n    input: {\r\n        borderWidth: sizes.borderWidth,\r\n        borderColor: colors.borderColor,\r\n        borderRadius: sizes.borderRadius,\r\n        height: sizes.height,\r\n        backgroundColor: colors.itemBg,\r\n        color: colors.itemFontColor,\r\n        fontSize: 18,\r\n        borderStyle: 'inset',\r\n    },\r\n    picker: {\r\n        backgroundColor: colors.itemBg,\r\n        borderColor: colors.borderColor,\r\n        borderWidth: sizes.borderWidth,\r\n        height: sizes.height,\r\n        color: colors.itemFontColor,\r\n        fontWeight: 'bold',\r\n        borderRadius: sizes.borderRadius,\r\n        borderStyle: 'inset',\r\n    },\r\n    box: {\r\n        flexGrow: 0,\r\n        padding: 25,\r\n        backgroundColor: '#1e2124',\r\n        borderRadius: 7,\r\n    },\r\n    textMain: {\r\n        color: colors.white,\r\n        fontSize: 24,\r\n        fontWeight: 'bold',\r\n        textAlign: 'center',\r\n    },\r\n    textInputTitle: {\r\n        textTransform: 'uppercase',\r\n        fontSize: 14,\r\n        color: colors.itemFontColor,\r\n        marginBottom: 5,\r\n        fontWeight: 'bold',\r\n    },\r\n    bg: {\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        flex: 1,\r\n        height: '100%',\r\n        width: '100%',\r\n        resizeMode: 'stretch',\r\n        position: 'absolute',\r\n        inset: '0 0 0 0',// fullscreen\r\n    },\r\n    clickableText: {\r\n        color: '#30b2fd',\r\n    },\r\n    tosText: {\r\n        color: '#404040',\r\n        fontSize: 12,\r\n        marginTop: 15,\r\n    },\r\n    inBox: {\r\n        padding: 7,\r\n    },\r\n    button: {\r\n        borderRadius: sizes.borderRadius,\r\n        backgroundColor: '#6665d2',\r\n        height: sizes.height,\r\n    },\r\n    buttonText: {\r\n        color: colors.white,\r\n        textAlign: 'center',\r\n        padding: 10,\r\n        fontWeight: 'bold',\r\n    },\r\n    clickableTextHover: {\r\n        textDecorationLine: 'underline',\r\n        cursor: 'pointer',\r\n    },\r\n    textInputError: {\r\n        color : colors.errorRed,\r\n    }\r\n});\r\n\r\nexport default styles;","import { View, Text, TextInput } from 'react-native';\r\nimport { styles, colors } from '../theme';\r\n\r\nconst CheckInput = (props) => {\r\n    var errorMessage = props.isRequiredError ? 'this field is required'\r\n                                                : props.errorMessage?.();\r\n    var isError = errorMessage != null;\r\n    return (\r\n        <View style = {styles.inBox}>\r\n        <Text style = {styles.textInputTitle}>\r\n            {props.title}\r\n            <Text style = {styles.textInputError}>\r\n            {isError ? \" - \" + errorMessage\r\n                        : null}\r\n            </Text>\r\n        </Text>\r\n        <TextInput\r\n            spellCheck = {false}\r\n            style = {isError ? [styles.input, {borderColor: colors.errorRed, borderWidth: 2}]\r\n                            : styles.input}\r\n            onChangeText = {props.onChangeText}\r\n            secureTextEntry = {props.secureTextEntry ?? null}\r\n        />\r\n        </View>\r\n    )\r\n};\r\n\r\nexport default CheckInput;","import { styles } from \"../theme\";\r\nimport { ScrollView, ImageBackground } from \"react-native\";\r\n\r\nconst bgImage = process.env.PUBLIC_URL + '/assets/images/bg.jpg';\r\n\r\nconst BoxedBg = (props) => (\r\n    <ImageBackground\r\n        source = {bgImage}\r\n        style = {styles.bg}\r\n    >\r\n        <ScrollView style = {styles.box}>\r\n            {props.content}\r\n        </ScrollView>\r\n    </ImageBackground>\r\n);\r\n\r\nexport default BoxedBg;","import React, { useState } from 'react';\r\nimport {\r\n  StyleSheet,\r\n  Text,\r\n  View,\r\n  TextInput,\r\n  TouchableOpacity,\r\n  TouchableWithoutFeedback,\r\n  FlatList,\r\n  Dimensions,\r\n} from 'react-native';\r\nimport { IoSend } from 'react-icons/io5';\r\nimport { IoMdMic } from 'react-icons/io';\r\nimport { AiOutlineSmile, AiOutlinePaperClip } from 'react-icons/ai';\r\nimport { colors } from '../theme';\r\nimport { Bubble, GiftedChat } from 'react-native-gifted-chat';\r\nimport { position } from 'dom-helpers';\r\n\r\nconst StyledBubble = (props) => {\r\n  return (\r\n    <Bubble\r\n      {...props}\r\n\r\n      wrapperStyle={{\r\n        right: { backgroundColor: '#6665d2', borderRadius: 20 },\r\n        left: { backgroundColor: '#6665d2', borderRadius: 20 },\r\n      }}\r\n\r\n      containerToPreviousStyle={{\r\n        right: { borderTopRightRadius: 5 },\r\n        left: { borderTopLeftRadius: 5 },\r\n      }}\r\n      containerToNextStyle={{\r\n        right: { borderBottomRightRadius: 5 },\r\n        left: { borderBottomLeftRadius: 5 },\r\n      }}\r\n\r\n      textStyle={{\r\n        left: { color: '#fff', fontSize: 16 },\r\n        right: { color: '#fff', fontSize: 16 },\r\n      }}\r\n    />\r\n  )\r\n}\r\n\r\nconst InputToolbar = (props) => {\r\n  const [isInput, setIsInput] = useState(false);\r\n  const [inputMessage, setInputMessage] = useState('');\r\n  const [linesCount, setLinesCount] = useState(1);\r\n\r\n  const sendMessage = () => {\r\n    if (inputMessage != '') {\r\n      props.sendMessage([{_id: 1,\r\n        text: inputMessage,\r\n        createdAt: new Date(),\r\n        user: props.currentUser,\r\n      }]);\r\n      setInputMessage('');\r\n      setLinesCount(1);\r\n    }\r\n  }\r\n\r\n  const textInputStyle = () => {\r\n    return isInput ? [styles.messageInput, {outline: 'none', height: 20 + 20 * linesCount},]\r\n                   : [styles.messageInput, {height: 20 + 20 * linesCount}]\r\n  }\r\n\r\n  return (\r\n    <View style={styles.messageInputView}>\r\n      <TouchableOpacity\r\n        style={styles.messageSendView}\r\n        onPress={() => alert('open smiles')}\r\n      >\r\n        <AiOutlineSmile size='25'/>\r\n      </TouchableOpacity>\r\n      <TouchableOpacity\r\n        style={styles.messageSendView}\r\n        onPress={() => alert('send file or smth')}\r\n      >\r\n        <AiOutlinePaperClip size='25'/>\r\n      </TouchableOpacity>\r\n      <TouchableOpacity\r\n        style={styles.messageSendView}\r\n        onPress={() => alert('send voice message')}\r\n      >\r\n        <IoMdMic size='25'/>\r\n      </TouchableOpacity>\r\n      <TextInput\r\n        defaultValue={inputMessage}\r\n        inputContainerStyle={styles.messageInput}\r\n        style={textInputStyle()}\r\n        value={inputMessage}\r\n        placeholder='Message'\r\n        onChangeText={(text) => {\r\n          setInputMessage(text);\r\n          setLinesCount(Math.max(\r\n            1, \r\n            Math.min(\r\n              inputMessage.split(/\\r\\n|\\r|\\n/).length - 1,\r\n              10\r\n            )\r\n          ));\r\n        }}\r\n        onSubmitEditing={sendMessage}\r\n        onFocus={() => setIsInput(true)}\r\n        onBlur={() => setIsInput(false)}\r\n        autoFocus={true}\r\n        blurOnSubmit={false}\r\n        spellCheck={false}\r\n        multiline={true}\r\n      />\r\n      <TouchableOpacity\r\n        style={styles.messageSendView}\r\n        onPress={sendMessage}\r\n      >\r\n        <IoSend size='25'/>\r\n      </TouchableOpacity>\r\n    </View>\r\n  )\r\n}\r\n\r\nconst Chat = (props) => {\r\n  return (\r\n    <View style={styles.container}>\r\n      <GiftedChat\r\n        messages={props.messages}\r\n        user={{_id: 1,}}\r\n        minInputToolbarHeight={0}\r\n        renderInputToolbar={() => null}\r\n        renderBubble={(props) => (\r\n          <StyledBubble {...props}/>\r\n        )}\r\n        onPressAvatar={(user) => alert(`open profile of user with id=${user._id}`)}\r\n      />\r\n      <InputToolbar\r\n        sendMessage={props.sendMessage}\r\n        currentUser={props.currentUser}\r\n      />\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#1e2124',\r\n  },\r\n  messageInputView: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    // marginHorizontal: 14,\r\n    // backgroundColor: '#fff',\r\n  },\r\n  messageInput: {\r\n    paddingTop: 10,\r\n    flex: 1,\r\n    paddingHorizontal: 10,\r\n    backgroundColor: colors.itemBg,\r\n    color: colors.itemFontColor,\r\n    borderWidth: 0,\r\n    borderColor: \"transparent\",\r\n  },\r\n  messageSendView: {\r\n    paddingHorizontal: 10,\r\n    justifyContent: 'flex-end',\r\n    paddingVertical: 5,\r\n    backgroundColor: colors.itemBg,\r\n    color: colors.itemFontColor,\r\n  },\r\n});\r\n\r\nexport default Chat;","import React from 'react';\r\nimport { FlatList, Image, View, Text, StyleSheet } from 'react-native';\r\nimport { TouchableOpacity, TouchableWithoutFeedback } from 'react-native-gesture-handler';\r\nimport { colors } from '../theme';\r\nimport { IoMdSettings } from 'react-icons/io';\r\nimport { FiLogOut } from 'react-icons/fi';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst Toolbar = (props) => {\r\n  let navigate = useNavigate();\r\n\r\n  return (\r\n    <View\r\n      style={{\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        backgroundColor: '#1e2124',\r\n      }}\r\n    >\r\n      <TouchableOpacity\r\n        style={styles.toolbarButton}\r\n        onPress={() => navigate('/settings')}\r\n      >\r\n        <IoMdSettings size={25} />\r\n      </TouchableOpacity>\r\n      <TouchableOpacity\r\n        style={styles.toolbarButton}\r\n        onPress={() => navigate('/login')}  \r\n      >\r\n        <FiLogOut size={25} />\r\n      </TouchableOpacity>\r\n    </View>\r\n  )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n  },\r\n  avatar: {\r\n    padding: 10,\r\n    width: 50,\r\n    height: 50,\r\n    borderRadius: 25,\r\n  },\r\n  chatName: {\r\n    color: colors.white,\r\n    fontWeight: 'bold',\r\n    fontSize: 16,\r\n    paddingTop: 10,\r\n  },\r\n  messageAuthor: {\r\n    color: colors.white,\r\n    fontWeight: 'bold',\r\n  },\r\n  message: {\r\n    color: colors.white,\r\n    fontWeight: 'normal'\r\n  },\r\n  toolbarButton: {\r\n    paddingHorizontal: 10,\r\n    justifyContent: 'flex-end',\r\n    paddingVertical: 5,\r\n    backgroundColor: '#1e2124',\r\n    color: colors.itemFontColor,\r\n  },\r\n});\r\n\r\nconst ChatItem = (props) => {\r\n  return (\r\n    <TouchableWithoutFeedback onPress={props.onPress}>\r\n      <View style={styles.container}>\r\n        <View style={{padding: 10}}>\r\n          <Image\r\n            style={styles.avatar}\r\n            source={{uri: props.avatar}}\r\n          />\r\n        </View>\r\n        <View>\r\n          <Text style={styles.chatName}>{props.chatName}</Text>\r\n          <Text style={styles.messageAuthor}>\r\n            {props.lastMessage ? `${props.lastMessage.author}: ` : ''}\r\n            <Text style={styles.message}> \r\n              {props.lastMessage ? `${props.lastMessage.text}` : ''}\r\n            </Text>\r\n          </Text>\r\n        </View>\r\n      </View>\r\n    </TouchableWithoutFeedback>\r\n  );\r\n}\r\n\r\nconst ChatList = (props) => {\r\n  const renderItem = ({item}) => {\r\n    return (\r\n      <ChatItem\r\n        avatar={item.avatar}\r\n        chatName={item.name}\r\n        lastMessage={item.lastMessage ? {\r\n          author: item.lastMessage?.user.name,\r\n          text: item.lastMessage?.text,\r\n          date: item.lastMessage?.createdAt,\r\n        } : null}\r\n        onPress={() => props.openChat(item._id)}\r\n      />\r\n    )\r\n  }\r\n\r\n  return (\r\n    <View style={{height: '100%'}}>\r\n      <FlatList\r\n        style={{ backgroundColor: '#1e2124', }}\r\n        data={props.chats}\r\n        renderItem={renderItem}\r\n      />\r\n      <Toolbar/>\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default ChatList;","import React, { useState } from 'react';\r\nimport { View, ScrollView, Text, ImageBackground, TouchableOpacity, Image } from 'react-native';\r\nimport { Picker } from '@react-native-picker/picker';\r\nimport { Link } from 'react-router-native';\r\nimport { CheckInput, BoxedBg } from '../components';\r\nimport { styles } from '../theme';\r\n\r\nfunction isEmail(str) {\r\n  var re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n  return re.test(str.toLowerCase());\r\n}\r\n\r\nconst Register = () => (\r\n  <BoxedBg content = {<RegisterForm/>}/>\r\n);\r\n\r\nconst RegisterForm = () => {\r\n  const [hasAccount, setHasAccount] = useState(false);\r\n  const [isReadingTos, setIsReadingTos] = useState(false);\r\n  const [isReadingPp, setIsReadingPp] = useState(false);\r\n  const [email, setEmail] = useState();\r\n  const [username, setUsername] = useState();\r\n  const [password, setPassword] = useState();\r\n  // jan 1 of current year\r\n  const [birthday, setBirthday] = useState(1);\r\n  const [birthMonth, setBirthMonth] = useState(0);\r\n  const [birthYear, setBirthYear] = useState(new Date().getFullYear());\r\n\r\n  const [noEmail, setNoEmail] = useState(false);\r\n  const [isEmailValid, setIsEmailValid] = useState(true);\r\n  const [isEmailRegistered, setIsEmailRegistered] = useState(false);\r\n  const [isValidBirthday, setIsValidBirthday] = useState(true);\r\n  const [noUsername, setNoUsername] = useState(false);\r\n  const [noPassword, setNoPassword] = useState(false);\r\n\r\n  return (\r\n    <>\r\n      <View style = {styles.inBox}>\r\n        <Text\r\n          style = {styles.textMain}\r\n        >\r\n          Create an account\r\n        </Text>\r\n      </View>\r\n\r\n      <CheckInput\r\n        title = {'email'}\r\n        isRequiredError = {noEmail}\r\n        errorMessage = {() => {\r\n          return !isEmailValid     ? 'please enter an email address'\r\n               : isEmailRegistered ? 'email address already registered'\r\n               : null;\r\n        }}\r\n        onChangeText = {(text) => setEmail(text)}\r\n      />\r\n\r\n      <CheckInput\r\n        title = {'username'}\r\n        isRequiredError = {noUsername}\r\n        onChangeText = {(text) => setUsername(text)}\r\n      />\r\n\r\n      <CheckInput\r\n        title = {'password'}\r\n        isRequiredError = {noPassword}\r\n        onChangeText = {(text) => setPassword(text)}\r\n        secureTextEntry = {true}\r\n      />\r\n\r\n      <View style = {styles.inBox}>\r\n        <Text style = {styles.textInputTitle}>\r\n          date of birth\r\n        </Text>\r\n\r\n        <View style = {{flexDirection: 'row', width: '100%'}}>\r\n          {/* Month */}\r\n          <Picker\r\n            style = {[styles.picker, {width: '40%'}]}\r\n            onValueChange = {(val, id) => setBirthMonth(val)}  \r\n          >\r\n            <Picker.Item label = 'Jan' value = '0' />\r\n            <Picker.Item label = 'Feb' value = '1' />\r\n            <Picker.Item label = 'Mar' value = '2' />\r\n          </Picker>\r\n\r\n          {/* Day */}\r\n          <Picker\r\n            style = {[styles.picker, {width: '20%', marginHorizontal: '10%'}]}\r\n            onValueChange = {(val, id) => setBirthday(val)}  \r\n          >\r\n            <Picker.Item label = '1' value = '1' />\r\n            <Picker.Item label = '2' value = '2' />\r\n            <Picker.Item label = '3' value = '3' />\r\n            <Picker.Item label = '28' value = '28' />\r\n            <Picker.Item label = '29' value = '29' />\r\n            <Picker.Item label = '30' value = '30' />\r\n            <Picker.Item label = '31' value = '31' />\r\n          </Picker>\r\n\r\n          {/* Year */}\r\n          <Picker\r\n            style = {[styles.picker, {width: '30%'}]}\r\n            onValueChange = {(val, id) => setBirthYear(val)}\r\n          >\r\n            <Picker.Item label = '2021' value = '2021' />\r\n            <Picker.Item label = '2020' value = '2020' />\r\n            <Picker.Item label = '2019' value = '2019' />\r\n          </Picker>\r\n        </View>\r\n        <Text style = {styles.textInputError}>\r\n          {!isValidBirthday ? 'Please enter a valid date of birth'\r\n                            : null}\r\n        </Text>\r\n      </View>\r\n\r\n      <View style = {styles.inBox}>\r\n        <TouchableOpacity\r\n          style = {styles.button}\r\n          onPress = {() => {\r\n            var noEmail_ = email == null || email == '';\r\n            setNoEmail(noEmail_);\r\n            var isEmailValid_ = !noEmail_ && isEmail(email);\r\n            setIsEmailValid(isEmailValid_);\r\n            var isEmailRegistered_ = isEmailValid_ && email == 'registered@email.com';\r\n            setIsEmailRegistered(isEmailRegistered_);\r\n\r\n            var birthdate = new Date(birthYear, birthMonth, birthday);\r\n            var isValidBirthday_ = birthdate.getDate() == birthday\r\n                                && birthdate.getFullYear() == birthYear\r\n                                && birthdate.getMonth() == birthMonth;\r\n            setIsValidBirthday(isValidBirthday_);\r\n\r\n            var noUsername = username == null || username == '';\r\n            setNoUsername(noUsername);\r\n            var noPassword = password == null || password == '';\r\n            setNoPassword(noPassword);\r\n\r\n            if (isEmailValid_ && !isEmailRegistered_ && isValidBirthday_ && !noPassword && !noUsername) {\r\n              register(email, username, password, birthdate);\r\n            }\r\n          }}\r\n        >\r\n          <Text style = {styles.buttonText}>\r\n            Continue\r\n          </Text>\r\n        </TouchableOpacity>\r\n        <Link \r\n          onMouseEnter = {() => setHasAccount(true)}\r\n          onMouseLeave = {() => setHasAccount(false)}\r\n          to='/login'\r\n          underlayColor = 'rgba(0, 0, 0, 0)'\r\n        >\r\n          <Text style = {hasAccount ? [styles.clickableText, styles.clickableTextHover]\r\n                                    : styles.clickableText}>\r\n            Already have an account?\r\n          </Text>    \r\n        </Link>\r\n\r\n        <Text style = {styles.tosText}>\r\n          {'By registering, you agree to AppName '}\r\n          <Text\r\n            onMouseEnter = {() => setIsReadingTos(true)}\r\n            onMouseLeave = {() => setIsReadingTos(false)}\r\n            style = {isReadingTos ? [styles.clickableText, styles.clickableTextHover]\r\n                                  : styles.clickableText}\r\n            onPress = {() => alert('Redirect to ToS')}\r\n          >Terms of Service</Text>\r\n          {' and '} \r\n          <Text\r\n            onMouseEnter = {() => setIsReadingPp(true)}\r\n            onMouseLeave = {() => setIsReadingPp(false)}\r\n            style = {isReadingPp ? [styles.clickableText, styles.clickableTextHover]\r\n                                  : styles.clickableText}\r\n            onPress = {() => alert('Redirect to PP')}\r\n          >Privacy Policy</Text>\r\n          .\r\n        </Text>\r\n      </View>\r\n    </>\r\n  )\r\n};\r\n\r\nfunction register(email, username, password, birthday) {\r\n  alert(`\r\n    Email: ${email}\r\n    Username: ${username}\r\n    Password hash: ${password.hashCode()}\r\n    birthday: ${birthday.toDateString()}\r\n  `)\r\n}\r\n\r\nString.prototype.hashCode = function() {\r\n  var hash = 0;\r\n  if (this.length == 0) {\r\n      return hash;\r\n  }\r\n  for (var i = 0; i < this.length; i++) {\r\n      var char = this.charCodeAt(i);\r\n      hash = ((hash<<5)-hash)+char;\r\n      hash = hash & hash; // Convert to 32bit integer\r\n  }\r\n  return hash;\r\n}\r\n\r\nexport default Register;","import React, { useState } from 'react';\r\nimport { Text, TouchableOpacity } from 'react-native';\r\nimport { BoxedBg, CheckInput } from '../components';\r\nimport { View } from 'react-native';\r\nimport { styles } from '../theme';\r\nimport { Link } from 'react-router-native';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst Login = () => (\r\n    <BoxedBg content = {<LoginForm/>}/>\r\n);\r\n\r\nconst LoginForm = () => {\r\n    const [needsAccount, setNeedsAccount] = useState(false);\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [noEmail, setNoEmail] = useState(false);\r\n    const [noPassword, setNoPassword] = useState(false);\r\n    const [forgotPassword, setForgotPassword] = useState(false);\r\n    const [badCredentials, setBadCredentials] = useState(false);\r\n    const [emailDoesntExist, setEmailDoesntExist] = useState(false);\r\n    let navigate = useNavigate();\r\n\r\n    return (\r\n        <>\r\n            <View style = {styles.inBox}>\r\n                <Text\r\n                    style = {styles.textMain}\r\n                >\r\n                    Welcome back!\r\n                </Text>\r\n            </View>\r\n\r\n            <CheckInput\r\n                title = 'email'\r\n                isRequiredError = {noEmail}\r\n                onChangeText = {(text) => setEmail(text)}\r\n                errorMessage = {() => badCredentials   ? 'email or password is invalid' \r\n                                    : emailDoesntExist ? 'email does not exist'\r\n                                    : null}\r\n            />\r\n\r\n            <CheckInput\r\n                title = 'password'\r\n                isRequiredError = {noPassword}\r\n                secureTextEntry = {true}\r\n                onChangeText = {(text) => setPassword(text)}\r\n                errorMessage = {() => badCredentials ? 'email or password is invalid' : null}\r\n            />\r\n\r\n            <View\r\n                style = {[styles.inBox, {marginTop: -14}]}\r\n                onMouseEnter = {() => setForgotPassword(true)}\r\n                onMouseLeave = {() => setForgotPassword(false)}    \r\n            >\r\n                <Text\r\n                    style = {forgotPassword ? [styles.clickableText, styles.clickableTextHover]\r\n                                            : styles.clickableText}\r\n                    onPress = {() => {\r\n                        // reset\r\n                        setNoPassword(false);\r\n                        setBadCredentials(false);\r\n\r\n                        setNoEmail(!email);\r\n                        if (email == 'registered@email.com') {\r\n                            setEmailDoesntExist(false);\r\n                            alert(`\r\nWe sent instructions to change your password to\r\n${email}, please check both your inbox\r\nand spam folder.\r\n                            `);\r\n                        } else {\r\n                            setEmailDoesntExist(true);\r\n                        }\r\n                    }}                            \r\n                >\r\n                    Forgot your password?\r\n                </Text>   \r\n            </View>\r\n\r\n            <View style = {styles.inBox}>\r\n                <TouchableOpacity\r\n                    style = {styles.button}\r\n                    onPress = {() => {\r\n                        setNoPassword(!password);\r\n                        setNoEmail(!email);\r\n\r\n                        if (!email || !password) {\r\n                            return;\r\n                        }\r\n\r\n                        if (email == 'registered@email.com' && password == '12345') {\r\n                            // setBadCredentials(false);\r\n                            // alert('successfull login');\r\n                            navigate('/chat')\r\n                        } else {\r\n                            setBadCredentials(true);\r\n                        }\r\n                    }}\r\n                >\r\n                    <Text style = {styles.buttonText}>\r\n                        Login\r\n                    </Text>\r\n                </TouchableOpacity>\r\n\r\n            \r\n                <Text style = {styles.tosText}>\r\n                    {'Need an account? '}\r\n                    <Link\r\n                        to = '/register'\r\n                        underlayColor = 'rgba(0, 0, 0, 0)'\r\n                        onMouseEnter = {() => setNeedsAccount(true)}\r\n                        onMouseLeave = {() => setNeedsAccount(false)}\r\n                    >\r\n                        <Text style = {needsAccount ? [styles.clickableText, styles.clickableTextHover]\r\n                                                    : styles.clickableText}>\r\n                            Register\r\n                        </Text>\r\n                    </Link>\r\n                </Text>\r\n            </View>\r\n        </>\r\n    );\r\n};\r\nexport default Login;","import React, { useEffect, useState } from 'react';\r\nimport { Chat, ChatList } from '../components';\r\nimport { GiftedChat } from 'react-native-gifted-chat';\r\nimport { View, Dimensions, TouchableOpacity } from 'react-native';\r\nimport { IoMdArrowRoundBack } from 'react-icons/io';\r\nimport { colors } from '../theme';\r\n\r\nconst ChatPage = () => {\r\n  const u2 = {\r\n    _id: 2,\r\n    name: 'John Doe',\r\n    avatar: 'https://external-content.duckduckgo.com/iu/?u=https%3A%2F%2F66.media.tumblr.com%2F71bb701a109cff6608ba24bf7ef3f16e%2Ftumblr_pcchwbaHls1x72ag3o1_1280.png&f=1&nofb=1',\r\n  };\r\n  const u1 = {\r\n    _id: 1,\r\n    name: 'Robert Henry',\r\n    avatar: 'https://external-content.duckduckgo.com/iu/?u=https%3A%2F%2Fi.redd.it%2Fqqa16cl4wbd21.png&f=1&nofb=1'\r\n  };\r\n\r\n  const [messages, setMessages] = useState([\r\n    { _id: 1, text: 'Hey there!', createdAt: new Date(), user: u1 },\r\n    { _id: 2, text: 'Hello, how are you doing?', createdAt: new Date(), user: u2 },\r\n    { _id: 3, text: 'I am good, how about you?', createdAt: new Date(), user: u1 },\r\n    { _id: 4, text: `😊😇`, createdAt: new Date(), user: u1 },\r\n    { _id: 5, text: `Can't wait to meet you.`, createdAt: new Date(), user: u2 },\r\n    { _id: 6, text: `That's great, when are you coming?`, createdAt: new Date(), user: u1 },\r\n    { _id: 7, text: `This weekend.`, createdAt: new Date(), user: u2 },\r\n    { _id: 8, text: `Around 4 to 6 PM.`, createdAt: new Date(), user: u2 },\r\n    { _id: 9, text: `Great, don't forget to bring me some mangoes.`, createdAt: new Date(), user: u1 },\r\n    { _id: 10, text: `Sure!`, createdAt: new Date(), user: u2 },\r\n    { _id: 11, text: '1', createdAt: new Date(), user: u1},\r\n    { _id: 12, text: '2', createdAt: new Date(), user: u1},\r\n    { _id: 13, text: '3', createdAt: new Date(), user: u1},\r\n    { _id: 14, text: '1', createdAt: new Date(), user: u2},\r\n    { _id: 15, text: '2', createdAt: new Date(), user: u2},\r\n    { _id: 16, text: '3', createdAt: new Date(), user: u2},\r\n  ].reverse());\r\n\r\n  function getTime(date) {\r\n    var hours = date.getHours();\r\n    var minutes = date.getMinutes();\r\n    var ampm = hours >= 12 ? 'PM' : 'AM';\r\n    hours = hours % 12;\r\n    hours = hours ? hours : 12;\r\n    minutes = minutes < 10 ? '0' + minutes : minutes;\r\n    var strTime = hours + ':' + minutes + ' ' + ampm;\r\n    return strTime;\r\n  }\r\n\r\n  const sendMessage = (messages_ = []) => {\r\n    setMessages(GiftedChat.append(messages, messages_));\r\n  }\r\n\r\n  const chats = [\r\n    { _id: 1,\r\n      name: 'Chat1', \r\n      avatar: 'https://steamuserimages-a.akamaihd.net/ugc/759346451812931511/D878648B294DA2B94D18893BF363C9084BA1D8F1/?imw=5000&imh=5000&ima=fit&impolicy=Letterbox&imcolor=%23000000&letterbox=false',\r\n      lastMessage: messages[0],\r\n    },\r\n    { _id: 2,\r\n      name: 'Chat2',\r\n      avatar: 'https://external-content.duckduckgo.com/iu/?u=https%3A%2F%2Fi.redd.it%2Fqqa16cl4wbd21.png&f=1&nofb=1',\r\n    },\r\n    { _id: 3,\r\n      name: 'Chat3',\r\n      avatar: 'https://st2.depositphotos.com/1009634/7235/v/950/depositphotos_72350117-stock-illustration-no-user-profile-picture-hand.jpg',\r\n    },\r\n    { _id: 4,\r\n      name: 'Chat4',\r\n      avatar: 'https://www.neurosciencemarketing.com/wp-content/uploads/2016/08/mona-lisa.jpg',\r\n    },\r\n    \r\n  ];\r\n\r\n  const [aspectRatio, setAspectRatio] = useState(Dimensions.get('window').width / Dimensions.get('window').height);\r\n\r\n  useEffect(() => {\r\n    const subscription = Dimensions.addEventListener(\r\n      'change',\r\n      ({ window }) => {\r\n        setAspectRatio( window.width / window.height );\r\n      }\r\n    );\r\n    return () => subscription?.remove();\r\n  });\r\n\r\n  const [mobileShowChat, setMobileShowChat] = useState(false);// show chatList if false\r\n  \r\n  const openChat = (_id) => {\r\n    if (_id == 1) {\r\n      setMobileShowChat(true)\r\n    } else {\r\n      alert(`open Chat with id ${_id}`)\r\n    }\r\n  }\r\n\r\n  const renderChatList = () => (\r\n    <ChatList\r\n      chats={chats}\r\n      openChat={openChat}\r\n    />\r\n  )\r\n\r\n  const renderChat = () => (\r\n    <Chat\r\n      sendMessage={sendMessage}\r\n      messages={messages}\r\n      currentUser={u1}\r\n    />\r\n  )\r\n\r\n  const renderHeader = () => (\r\n    <View style={{\r\n      padding: 5,\r\n      backgroundColor: colors.itemBgColor,\r\n      color: colors.itemFontColor,\r\n    }}>\r\n      <TouchableOpacity onPress={() => setMobileShowChat(false)}>\r\n        <IoMdArrowRoundBack size='35'/>\r\n      </TouchableOpacity>\r\n    </View>\r\n  )\r\n\r\n  if (aspectRatio > 1) {\r\n    return (\r\n      <View style={{\r\n        position: 'absolute',\r\n        inset: '0 0 0 0',// fullscreen\r\n        display: 'grid',\r\n      }}>\r\n        <View style={{'grid-column': '1 / 2'}}>\r\n          {renderChatList()}\r\n        </View>\r\n        <View style={{'grid-column': '2 / 6'}}>\r\n          {renderChat()}\r\n        </View>\r\n      </View>\r\n    )\r\n  }\r\n  if (mobileShowChat) {\r\n    return (\r\n      <View style={{\r\n        position: 'absolute',\r\n        inset: '0 0 0 0',// fullscreen\r\n        backgroundColor: colors.itemBg,\r\n      }}>\r\n        {renderHeader()}\r\n        {renderChat()}\r\n      </View>\r\n    )\r\n  }\r\n  return (\r\n    <View style={{\r\n      position: 'absolute',\r\n      inset: '0 0 0 0',// fullscreen\r\n    }}>\r\n      {renderChatList()}\r\n    </View>\r\n  )\r\n}\r\n\r\nexport default ChatPage;","import React, {Fragment, useState} from 'react';\r\nimport {FaUserCircle} from 'react-icons/fa';\r\nimport {FlatList, Button, View, StatusBar, StyleSheet, Text, TouchableOpacity } from 'react-native';\r\nimport styled from 'react-native-styled-components';\r\nimport {sizes, colors} from '../theme';\r\n\r\nconst Settings = () => {\r\n    const [selectedId, setSelectedId] = useState(null);\r\n    const DATA = [\r\n        {\r\n          id: 'bd7acbea-c1b1-46c2-aed5-3ad53abb28ba',\r\n          title: 'My Account',\r\n        },\r\n        {\r\n          id: '3ac68afc-c605-48d3-a4f8-fbd91aa97f63',\r\n          title: 'User Profile',\r\n        },\r\n        {\r\n          id: '58694a0f-3da1-471f-bd96-145571e29d72',\r\n          title: 'Privacy & Safety',\r\n        },\r\n        {\r\n          id: '58694a0f-3da1-471f-bd96-145571e29dа2',\r\n          title: 'Authorized Apps',\r\n        },\r\n        {\r\n          id: '58694a0f-3da1-471f-bd96-145571e29d22',\r\n          title: 'Connections',\r\n        },\r\n        {\r\n          id: '58694a0f-3da1-471f-bd96-145571e22d22',\r\n          title: 'Appearance',\r\n        },\r\n        {\r\n          id: '58694a0f-3da1-471f-bd96-145571e21d22',\r\n          title: 'Accessibility',\r\n        },\r\n        {\r\n          id: '58694a0f-3da1-471f-bd96-145571e2f723',\r\n          title: 'Voice & Video',\r\n        },\r\n        {\r\n          id: '58694a0f-3da1-471f-bd56-1455141e2f73',\r\n          title: 'Text & Images',\r\n        },\r\n        {\r\n          id: '58694a0f-3da1-471f-b436-1312141e2f73',\r\n          title: 'Notifications',\r\n        },\r\n        {\r\n          id: '58694a0f-3da1-471f-a4a8-13131241e2f7',\r\n          title: 'Keybinds',\r\n        },\r\n        {\r\n          id: '58694a0f-3da1-471f-a4f8-13131241e2f7',\r\n          title: 'Language',\r\n        },\r\n      ];\r\n      const Item = ({ item, onPress, backgroundColor, textColor, titleBackgroundColor }) => (\r\n        <TouchableOpacity onPress={onPress} style={[styles.item, backgroundColor]}>\r\n          <MyText style={[styles.itemTitle, textColor, titleBackgroundColor]}>{item.title}</MyText>\r\n        </TouchableOpacity>\r\n      );\r\n\r\n      const renderItem = ({ item }) => {\r\n        const backgroundColor = item.id === selectedId ? \"#6665d2\" : colors.itemBg;\r\n        const color = item.id === selectedId ? 'white' : colors.itemFontColor;\r\n        return (\r\n          <Item\r\n          titleBackgroundColor = {{ backgroundColor }}\r\n          item={item}\r\n          onPress={() => setSelectedId(item.id)}\r\n          textColor={{ color }}\r\n        />\r\n        )\r\n      };\r\n\r\n      return (\r\n        <View style={[styles.container, { flexDirection: \"row\"}]}>\r\n          <View>\r\n            <FlatList\r\n              data={DATA}\r\n              renderItem={renderItem}\r\n              keyExtractor={item => item.id}\r\n              extraData={selectedId}\r\n            />\r\n          </View>\r\n         <View style ={ styles.mainContent}>\r\n          <MyText style ={ styles.header}> My Account </MyText>\r\n          <View style = {styles.profileBox}> \r\n\r\n            <View style ={{flexDirection: \"row\", alignItems: 'center', justifyContent: 'space-between', margin: 20}}>\r\n              <FaUserCircle size={150} style = {{ margin: 0,padding: 0}}/>   \r\n              <MyText style = {{ color:colors.itemFontColor, paddingLeft: 10, fontSize: 24, fontWeight: 'bold' }}>\r\n                User name\r\n              </MyText>\r\n              <View style = {{flex: 10}}>\r\n                <TouchableOpacity style={[styles.blueButton, { alignSelf: 'flex-end'}]}>\r\n                  Edit User Profile\r\n                </TouchableOpacity>   \r\n              </View>\r\n            </View>\r\n\r\n            <View style = {styles.mainInfoBox}>\r\n              <View style = {{flexDirection: \"row\"}}>\r\n                <View style = {{flexDirection: \"column\",  padding: 7}}>\r\n                  <MyText style={{fontWeight: 'bold'}}>USERNAME</MyText>\r\n                  <MyText style={{fontSize: 16}}>John</MyText>\r\n                </View>\r\n                  <View style = {{flex: 10}}>\r\n                    <TouchableOpacity style={[styles.blackButton, {alignSelf: 'flex-end'}]}>\r\n                      Edit\r\n                    </TouchableOpacity>   \r\n                  </View>\r\n              </View>\r\n\r\n              <View style = {{flexDirection: \"row\"}}>\r\n                <View style = {{flexDirection: \"column\", padding: 7}}>\r\n                  <MyText style={{fontWeight: 'bold'}} >EMAIL</MyText>\r\n                  <MyText style={{fontSize: 16}}>*********@gmail.com</MyText>\r\n                </View>\r\n                  <View style = {{flex: 10}}>\r\n                    <TouchableOpacity style={[styles.blackButton, {alignSelf: 'flex-end'}]}>\r\n                      Edit\r\n                    </TouchableOpacity>   \r\n                  </View>\r\n              </View>\r\n\r\n              <View style = {{flexDirection: \"row\"}}>\r\n                <View style = {{flexDirection: \"column\",  padding: 7}}>\r\n                  <MyText style={{fontWeight: 'bold'}} >PHONE NUMBER</MyText>\r\n                  <MyText style={{fontSize: 16}}>You haven't added a phone number yet</MyText>\r\n                </View>\r\n                  <View style = {{flex: 10}}>\r\n                    <TouchableOpacity style={[styles.blackButton, {alignSelf: 'flex-end'}]}>\r\n                      Add\r\n                    </TouchableOpacity>   \r\n                  </View>\r\n              </View>\r\n            </View>     \r\n          </View>\r\n         </View>\r\n        </View>\r\n      );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n\r\n    styleText: {\r\n      color: colors.itemFontColor\r\n    },\r\n\r\n\r\n    container: {\r\n        flex: 1,\r\n        backgroundColor: colors.itemBg,\r\n        color: colors.itemFontColor,\r\n        position: 'absolute',\r\n        inset: '0 0 0 0',// fullscreen\r\n    },\r\n    mainContent: {\r\n      flex: 20,\r\n      backgroundColor: \"#36393F\",\r\n      paddingLeft: 20\r\n    },\r\n    header: {\r\n      color:'#ffffff',\r\n      fontSize: 28,\r\n      fontStyle: 'bold'\r\n    },\r\n    profileBox: {\r\n      width: 800,\r\n      height: 460,\r\n      color: colors.itemFontColor,\r\n      marginVertical:20,\r\n      marginHorizontal: 10,\r\n      borderRadius: 15,\r\n      paddingVertical: 10,\r\n      backgroundColor:\"#202225\"\r\n    },\r\n    blueButton : {\r\n      \r\n      width: 140,\r\n      height: 40,\r\n      borderRadius: 15,\r\n      fontWeight: 'bold',\r\n      fontSize: '10',\r\n      color: colors.white,\r\n      justifyContent: 'center',\r\n      textAlign: 'center',\r\n      backgroundColor: '#6665d2'\r\n    },\r\n    blackButton : {\r\n      width: 50,\r\n      height: 30,\r\n      margin: 10,\r\n      borderRadius: 10,\r\n      backgroundColor: '#4f545c',\r\n      textAlign: 'center',\r\n      color: colors.white,\r\n      justifyContent: 'center'\r\n    },\r\n    mainInfoBox: {\r\n      width: 760,\r\n      height: 220,\r\n      marginVertical:20,\r\n      marginHorizontal: 20,\r\n      borderRadius: 15,\r\n      paddingVertical: 10,\r\n      backgroundColor:\"#2f3136\",\r\n      flexDirection: \"column\",\r\n      justifyContent: 'space-between',\r\n      lignItems: 'center'\r\n    },\r\n    item: {\r\n      backgroundColor: colors.itemBg,\r\n      borderRadius: sizes.borderRadius,\r\n      padding: 1,\r\n      marginVertical: 6,\r\n      marginHorizontal: 16,\r\n    },\r\n    itemTitle: {\r\n      color: colors.itemFontColor,\r\n      textAlign: 'left',\r\n      borderRadius: 10,\r\n      padding: 4,\r\n      marginLeft: 60,\r\n      marginRight: 20,\r\n      fontSize: 14,\r\n    },\r\n  });\r\n  \r\n  const MyText = styled(Text, styles.styleText);\r\nexport default Settings;","import {\r\n    Route,\r\n    Link,\r\n    Routes\r\n} from 'react-router-dom'\r\n\r\nimport Home from './webpages/Home';\r\nimport Register from './webpages/Register';\r\nimport Login from './webpages/Login';\r\nimport Chat from './webpages/Chat'\r\nimport Settings from './webpages/Settings';\r\n\r\nconst App = () => {\r\n  return (\r\n    <>\r\n      <div>\r\n        <nav>\r\n          <ul id=\"navigation\">\r\n            <li>\r\n              <Link to=\"/\">Home</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/login\">Login</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/register\">Register</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/chat\">Chat</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/settings\">Settings</Link>\r\n            </li>\r\n          </ul>\r\n        </nav>\r\n      </div>\r\n      <Routes>\r\n        <Route path = '/'         element={<Home    />} />\r\n        <Route path = '/login'    element={<Login   />} />\r\n        <Route path = '/register' element={<Register/>} />\r\n        <Route path = '/chat'     element={<Chat    />} />\r\n        <Route path = '/settings' element={<Settings/>} />\r\n      </Routes>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { HashRouter, Route, Routes } from 'react-router-dom';\r\n\r\nReactDOM.render(\r\n  (\r\n    <HashRouter>\r\n      <App/>\r\n    </HashRouter>\r\n  ),\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}