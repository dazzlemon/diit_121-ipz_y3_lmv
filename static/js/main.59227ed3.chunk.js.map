{"version":3,"sources":["webpages/Home.js","theme/colors.js","theme/sizes.js","theme/styles.js","components/CheckInput.js","components/BoxedBg.js","components/Chat.js","components/ChatList.js","webpages/Register.js","webpages/Login.js","webpages/Chat.js","webpages/Settings.js","App.js","reportWebVitals.js","index.js"],"names":["Home","colors","borderColor","itemBg","white","itemFontColor","errorRed","sizes","height","borderRadius","borderWidth","styles","StyleSheet","create","input","backgroundColor","color","fontSize","borderStyle","picker","fontWeight","box","flexGrow","padding","textMain","textAlign","textInputTitle","textTransform","marginBottom","bg","alignItems","justifyContent","flex","width","resizeMode","position","inset","clickableText","tosText","marginTop","inBox","button","buttonText","clickableTextHover","textDecorationLine","cursor","textInputError","CheckInput","props","errorMessage","isRequiredError","isError","View","style","Text","title","TextInput","spellCheck","onChangeText","secureTextEntry","BoxedBg","ImageBackground","source","process","ScrollView","content","StyledBubble","wrapperStyle","right","left","containerToPreviousStyle","borderTopRightRadius","borderTopLeftRadius","containerToNextStyle","borderBottomRightRadius","borderBottomLeftRadius","textStyle","InputToolbar","useState","isInput","setIsInput","inputMessage","setInputMessage","linesCount","setLinesCount","sendMessage","_id","text","createdAt","Date","user","currentUser","messageInputView","TouchableOpacity","messageSendView","size","defaultValue","inputContainerStyle","messageInput","outline","value","placeholder","Math","max","min","split","length","onSubmitEditing","onFocus","onBlur","autoFocus","blurOnSubmit","multiline","onPress","container","display","flexDirection","paddingTop","paddingHorizontal","paddingVertical","Chat","messages","renderInputToolbar","renderBubble","avatar","chatName","messageAuthor","message","ChatItem","Image","uri","lastMessage","author","ChatList","FlatList","data","chats","renderItem","item","name","date","RegisterForm","hasAccount","setHasAccount","isReadingTos","setIsReadingTos","isReadingPp","setIsReadingPp","email","setEmail","username","setUsername","password","setPassword","birthday","setBirthday","birthMonth","setBirthMonth","getFullYear","birthYear","setBirthYear","noEmail","setNoEmail","isEmailValid","setIsEmailValid","isEmailRegistered","setIsEmailRegistered","isValidBirthday","setIsValidBirthday","noUsername","setNoUsername","noPassword","setNoPassword","onValueChange","val","id","Item","label","marginHorizontal","noEmail_","isEmailValid_","test","toLowerCase","isEmailRegistered_","birthdate","isValidBirthday_","getDate","getMonth","alert","hashCode","toDateString","register","onMouseEnter","onMouseLeave","to","underlayColor","String","prototype","hash","this","i","charCodeAt","Register","LoginForm","needsAccount","setNeedsAccount","forgotPassword","setForgotPassword","badCredentials","setBadCredentials","emailDoesntExist","setEmailDoesntExist","Login","ChatPage","u2","u1","reverse","setMessages","messages_","GiftedChat","append","marginVertical","Settings","SafeAreaView","keyExtractor","App","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.59227ed3.chunk.js","sourcesContent":["import React from 'react';\nconst Home = () => {\n    return (\n        <div>\n            <h1>App</h1>\n            <p>This is home page</p>\n        </div>\n    );\n};\nexport default Home;","const colors = {\n    borderColor: '#141414',\n    itemBg: '#1e1e1e',\n    white: '#ffffff',\n    itemFontColor: '#707070',\n    errorRed: '#ff1f1f',\n};\n\nexport default colors;","const sizes = {\n    height: 40,\n    borderRadius: 5,\n    borderWidth: 1,\n}\n\nexport default sizes;","import colors from './colors';\nimport sizes from './sizes';\nimport { StyleSheet } from 'react-native';\n\nconst styles = StyleSheet.create({\n    input: {\n        borderWidth: sizes.borderWidth,\n        borderColor: colors.borderColor,\n        borderRadius: sizes.borderRadius,\n        height: sizes.height,\n        backgroundColor: colors.itemBg,\n        color: colors.itemFontColor,\n        fontSize: 18,\n        borderStyle: 'inset',\n    },\n    picker: {\n        backgroundColor: colors.itemBg,\n        borderColor: colors.borderColor,\n        borderWidth: sizes.borderWidth,\n        height: sizes.height,\n        color: colors.itemFontColor,\n        fontWeight: 'bold',\n        borderRadius: sizes.borderRadius,\n        borderStyle: 'inset',\n    },\n    box: {\n        flexGrow: 0,\n        padding: 25,\n        backgroundColor: '#1e2124',\n        borderRadius: 7,\n    },\n    textMain: {\n        color: colors.white,\n        fontSize: 24,\n        fontWeight: 'bold',\n        textAlign: 'center',\n    },\n    textInputTitle: {\n        textTransform: 'uppercase',\n        fontSize: 14,\n        color: colors.itemFontColor,\n        marginBottom: 5,\n        fontWeight: 'bold',\n    },\n    bg: {\n        alignItems: 'center',\n        justifyContent: 'center',\n        flex: 1,\n        height: '100%',\n        width: '100%',\n        resizeMode: 'stretch',\n        position: 'absolute',\n        inset: '0 0 0 0',// fullscreen\n    },\n    clickableText: {\n        color: '#30b2fd',\n    },\n    tosText: {\n        color: '#404040',\n        fontSize: 12,\n        marginTop: 15,\n    },\n    inBox: {\n        padding: 7,\n    },\n    button: {\n        borderRadius: sizes.borderRadius,\n        backgroundColor: '#6665d2',\n        height: sizes.height,\n    },\n    buttonText: {\n        color: colors.white,\n        textAlign: 'center',\n        padding: 10,\n        fontWeight: 'bold',\n    },\n    clickableTextHover: {\n        textDecorationLine: 'underline',\n        cursor: 'pointer',\n    },\n    textInputError: {\n        color : colors.errorRed,\n    }\n});\n\nexport default styles;","import { View, Text, TextInput } from 'react-native';\nimport { styles, colors } from '../theme';\n\nconst CheckInput = (props) => {\n    var errorMessage = props.isRequiredError ? 'this field is required'\n                                                : props.errorMessage?.();\n    var isError = errorMessage != null;\n    return (\n        <View style = {styles.inBox}>\n        <Text style = {styles.textInputTitle}>\n            {props.title}\n            <Text style = {styles.textInputError}>\n            {isError ? \" - \" + errorMessage\n                        : null}\n            </Text>\n        </Text>\n        <TextInput\n            spellCheck = {false}\n            style = {isError ? [styles.input, {borderColor: colors.errorRed, borderWidth: 2}]\n                            : styles.input}\n            onChangeText = {props.onChangeText}\n            secureTextEntry = {props.secureTextEntry ?? null}\n        />\n        </View>\n    )\n};\n\nexport default CheckInput;","import { styles } from \"../theme\";\nimport { ScrollView, ImageBackground } from \"react-native\";\n\nconst bgImage = process.env.PUBLIC_URL + '/assets/images/bg.jpg';\n\nconst BoxedBg = (props) => (\n    <ImageBackground\n        source = {bgImage}\n        style = {styles.bg}\n    >\n        <ScrollView style = {styles.box}>\n            {props.content}\n        </ScrollView>\n    </ImageBackground>\n);\n\nexport default BoxedBg;","import React, { useState } from 'react';\nimport {\n  StyleSheet,\n  Text,\n  View,\n  TextInput,\n  TouchableOpacity,\n  TouchableWithoutFeedback,\n  FlatList,\n  Dimensions,\n} from 'react-native';\nimport { IoSend } from 'react-icons/io5';\nimport { IoMdMic } from 'react-icons/io';\nimport { AiOutlineSmile, AiOutlinePaperClip } from 'react-icons/ai';\nimport { colors } from '../theme';\nimport { Bubble, GiftedChat } from 'react-native-gifted-chat';\n\nconst StyledBubble = (props) => {\n  return (\n    <Bubble\n      {...props}\n\n      wrapperStyle={{\n        right: { backgroundColor: '#6665d2', borderRadius: 20 },\n        left: { backgroundColor: '#6665d2', borderRadius: 20 },\n      }}\n\n      containerToPreviousStyle={{\n        right: { borderTopRightRadius: 5 },\n        left: { borderTopLeftRadius: 5 },\n      }}\n      containerToNextStyle={{\n        right: { borderBottomRightRadius: 5 },\n        left: { borderBottomLeftRadius: 5 },\n      }}\n\n      textStyle={{\n        left: { color: '#fff', fontSize: 16 },\n        right: { color: '#fff', fontSize: 16 },\n      }}\n    />\n  )\n}\n\nconst InputToolbar = (props) => {\n  const [isInput, setIsInput] = useState(false);\n  const [inputMessage, setInputMessage] = useState('');\n  const [linesCount, setLinesCount] = useState(1);\n\n  const sendMessage = () => {\n    if (inputMessage != '') {\n      props.sendMessage([{_id: 1,\n        text: inputMessage,\n        createdAt: new Date(),\n        user: props.currentUser,\n      }]);\n      setInputMessage('');\n      setLinesCount(1);\n    }\n  }\n\n  const textInputStyle = () => {\n    return isInput ? [styles.messageInput, {outline: 'none', height: 20 + 20 * linesCount},]\n                   : [styles.messageInput, {height: 20 + 20 * linesCount}]\n  }\n\n  return (\n    <View style={styles.messageInputView}>\n      <TouchableOpacity\n        style={styles.messageSendView}\n      >\n        <AiOutlineSmile size='25'/>\n      </TouchableOpacity>\n      <TouchableOpacity\n        style={styles.messageSendView}\n      >\n        <AiOutlinePaperClip size='25'/>\n      </TouchableOpacity>\n      <TouchableOpacity\n        style={styles.messageSendView}\n      >\n        <IoMdMic size='25'/>\n      </TouchableOpacity>\n      <TextInput\n        defaultValue={inputMessage}\n        inputContainerStyle={styles.messageInput}\n        style={textInputStyle()}\n        value={inputMessage}\n        placeholder='Message'\n        onChangeText={(text) => {\n          setInputMessage(text);\n          setLinesCount(Math.max(\n            1, \n            Math.min(\n              inputMessage.split(/\\r\\n|\\r|\\n/).length - 1,\n              10\n            )\n          ));\n        }}\n        onSubmitEditing={sendMessage}\n        onFocus={() => setIsInput(true)}\n        onBlur={() => setIsInput(false)}\n        autoFocus={true}\n        blurOnSubmit={false}\n        spellCheck={false}\n        multiline={true}\n      />\n      <TouchableOpacity\n        style={styles.messageSendView}\n        onPress={sendMessage}\n      >\n        <IoSend size='25'/>\n      </TouchableOpacity>\n    </View>\n  )\n}\n\nconst Chat = (props) => {\n  return (\n    <View style={styles.container}>\n      <GiftedChat\n        messages={props.messages}\n        user={{_id: 1,}}\n        renderInputToolbar={() => (\n          <InputToolbar\n            sendMessage={props.sendMessage}\n            currentUser={props.currentUser}\n          />\n        )}\n        renderBubble={(props) => (\n          <StyledBubble {...props}/>\n        )}\n      />\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#1e2124',\n  },\n  messageInputView: {\n    display: 'flex',\n    flexDirection: 'row',\n    // marginHorizontal: 14,\n    // backgroundColor: '#fff',\n  },\n  messageInput: {\n    paddingTop: 10,\n    flex: 1,\n    paddingHorizontal: 10,\n    backgroundColor: colors.itemBg,\n    color: colors.itemFontColor,\n    borderWidth: 0,\n    borderColor: \"transparent\",\n  },\n  messageSendView: {\n    paddingHorizontal: 10,\n    justifyContent: 'flex-end',\n    paddingVertical: 5,\n    backgroundColor: colors.itemBg,\n    color: colors.itemFontColor,\n  },\n});\n\nexport default Chat;","import React from 'react';\nimport { FlatList, Image, View, Text, StyleSheet } from 'react-native';\nimport { colors } from '../theme';\n\nconst styles = StyleSheet.create({\n  container: {\n    display: 'flex',\n    flexDirection: 'row',\n  },\n  avatar: {\n    padding: 10,\n    width: 50,\n    height: 50,\n    borderRadius: 25,\n  },\n  chatName: {\n    color: colors.white,\n    fontWeight: 'bold',\n    fontSize: 16,\n    paddingTop: 10,\n  },\n  messageAuthor: {\n    color: colors.white,\n    fontWeight: 'bold',\n  },\n  message: {\n    color: colors.white,\n    fontWeight: 'normal'\n  },\n});\n\nconst ChatItem = (props) => {\n  return (\n    <View style={styles.container}>\n      <View style={{padding: 10}}>\n        <Image\n          style={styles.avatar}\n          source={{uri: props.avatar}}\n        />\n      </View>\n      <View>\n        <Text style={styles.chatName}>{props.chatName}</Text>\n        <Text style={styles.messageAuthor}>\n          {props.lastMessage ? `${props.lastMessage.author}: ` : ''}\n          <Text style={styles.message}> \n            {props.lastMessage ? `${props.lastMessage.text}` : ''}\n          </Text>\n        </Text>\n      </View>\n    </View>\n  );\n}\n\nconst ChatList = (props) => {\n  const renderItem = ({item}) => {\n    return (\n      <ChatItem\n        avatar={item.avatar}\n        chatName={item.name}\n        lastMessage={item.lastMessage ? {\n          author: item.lastMessage?.user.name,\n          text: item.lastMessage?.text,\n          date: item.lastMessage?.createdAt,\n        } : null}\n      />\n    )\n  }\n\n  return (\n    // <View>\n      <FlatList\n        style={{ backgroundColor: '#1e2124', }}\n        data={props.chats}\n        renderItem={renderItem}\n      />\n    // </View>\n  );\n};\n\nexport default ChatList;","import React, { useState } from 'react';\nimport { View, ScrollView, Text, ImageBackground, TouchableOpacity, Image } from 'react-native';\nimport { Picker } from '@react-native-picker/picker';\nimport { Link } from 'react-router-native';\nimport { CheckInput, BoxedBg } from '../components';\nimport { styles } from '../theme';\n\nfunction isEmail(str) {\n  var re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  return re.test(str.toLowerCase());\n}\n\nconst Register = () => (\n  <BoxedBg content = {<RegisterForm/>}/>\n);\n\nconst RegisterForm = () => {\n  const [hasAccount, setHasAccount] = useState(false);\n  const [isReadingTos, setIsReadingTos] = useState(false);\n  const [isReadingPp, setIsReadingPp] = useState(false);\n  const [email, setEmail] = useState();\n  const [username, setUsername] = useState();\n  const [password, setPassword] = useState();\n  // jan 1 of current year\n  const [birthday, setBirthday] = useState(1);\n  const [birthMonth, setBirthMonth] = useState(0);\n  const [birthYear, setBirthYear] = useState(new Date().getFullYear());\n\n  const [noEmail, setNoEmail] = useState(false);\n  const [isEmailValid, setIsEmailValid] = useState(true);\n  const [isEmailRegistered, setIsEmailRegistered] = useState(false);\n  const [isValidBirthday, setIsValidBirthday] = useState(true);\n  const [noUsername, setNoUsername] = useState(false);\n  const [noPassword, setNoPassword] = useState(false);\n\n  return (\n    <>\n      <View style = {styles.inBox}>\n        <Text\n          style = {styles.textMain}\n        >\n          Create an account\n        </Text>\n      </View>\n\n      <CheckInput\n        title = {'email'}\n        isRequiredError = {noEmail}\n        errorMessage = {() => {\n          return !isEmailValid     ? 'please enter an email address'\n               : isEmailRegistered ? 'email address already registered'\n               : null;\n        }}\n        onChangeText = {(text) => setEmail(text)}\n      />\n\n      <CheckInput\n        title = {'username'}\n        isRequiredError = {noUsername}\n        onChangeText = {(text) => setUsername(text)}\n      />\n\n      <CheckInput\n        title = {'password'}\n        isRequiredError = {noPassword}\n        onChangeText = {(text) => setPassword(text)}\n        secureTextEntry = {true}\n      />\n\n      <View style = {styles.inBox}>\n        <Text style = {styles.textInputTitle}>\n          date of birth\n        </Text>\n\n        <View style = {{flexDirection: 'row', width: '100%'}}>\n          {/* Month */}\n          <Picker\n            style = {[styles.picker, {width: '40%'}]}\n            onValueChange = {(val, id) => setBirthMonth(val)}  \n          >\n            <Picker.Item label = 'Jan' value = '0' />\n            <Picker.Item label = 'Feb' value = '1' />\n            <Picker.Item label = 'Mar' value = '2' />\n          </Picker>\n\n          {/* Day */}\n          <Picker\n            style = {[styles.picker, {width: '20%', marginHorizontal: '10%'}]}\n            onValueChange = {(val, id) => setBirthday(val)}  \n          >\n            <Picker.Item label = '1' value = '1' />\n            <Picker.Item label = '2' value = '2' />\n            <Picker.Item label = '3' value = '3' />\n            <Picker.Item label = '28' value = '28' />\n            <Picker.Item label = '29' value = '29' />\n            <Picker.Item label = '30' value = '30' />\n            <Picker.Item label = '31' value = '31' />\n          </Picker>\n\n          {/* Year */}\n          <Picker\n            style = {[styles.picker, {width: '30%'}]}\n            onValueChange = {(val, id) => setBirthYear(val)}\n          >\n            <Picker.Item label = '2021' value = '2021' />\n            <Picker.Item label = '2020' value = '2020' />\n            <Picker.Item label = '2019' value = '2019' />\n          </Picker>\n        </View>\n        <Text style = {styles.textInputError}>\n          {!isValidBirthday ? 'Please enter a valid date of birth'\n                            : null}\n        </Text>\n      </View>\n\n      <View style = {styles.inBox}>\n        <TouchableOpacity\n          style = {styles.button}\n          onPress = {() => {\n            var noEmail_ = email == null || email == '';\n            setNoEmail(noEmail_);\n            var isEmailValid_ = !noEmail_ && isEmail(email);\n            setIsEmailValid(isEmailValid_);\n            var isEmailRegistered_ = isEmailValid_ && email == 'registered@email.com';\n            setIsEmailRegistered(isEmailRegistered_);\n\n            var birthdate = new Date(birthYear, birthMonth, birthday);\n            var isValidBirthday_ = birthdate.getDate() == birthday\n                                && birthdate.getFullYear() == birthYear\n                                && birthdate.getMonth() == birthMonth;\n            setIsValidBirthday(isValidBirthday_);\n\n            var noUsername = username == null || username == '';\n            setNoUsername(noUsername);\n            var noPassword = password == null || password == '';\n            setNoPassword(noPassword);\n\n            if (isEmailValid_ && !isEmailRegistered_ && isValidBirthday_ && !noPassword && !noUsername) {\n              register(email, username, password, birthdate);\n            }\n          }}\n        >\n          <Text style = {styles.buttonText}>\n            Continue\n          </Text>\n        </TouchableOpacity>\n        <Link \n          onMouseEnter = {() => setHasAccount(true)}\n          onMouseLeave = {() => setHasAccount(false)}\n          to='/login'\n          underlayColor = 'rgba(0, 0, 0, 0)'\n        >\n          <Text style = {hasAccount ? [styles.clickableText, styles.clickableTextHover]\n                                    : styles.clickableText}>\n            Already have an account?\n          </Text>    \n        </Link>\n\n        <Text style = {styles.tosText}>\n          {'By registering, you agree to AppName '}\n          <Text\n            onMouseEnter = {() => setIsReadingTos(true)}\n            onMouseLeave = {() => setIsReadingTos(false)}\n            style = {isReadingTos ? [styles.clickableText, styles.clickableTextHover]\n                                  : styles.clickableText}\n            onPress = {() => alert('Redirect to ToS')}\n          >Terms of Service</Text>\n          {' and '} \n          <Text\n            onMouseEnter = {() => setIsReadingPp(true)}\n            onMouseLeave = {() => setIsReadingPp(false)}\n            style = {isReadingPp ? [styles.clickableText, styles.clickableTextHover]\n                                  : styles.clickableText}\n            onPress = {() => alert('Redirect to PP')}\n          >Privacy Policy</Text>\n          .\n        </Text>\n      </View>\n    </>\n  )\n};\n\nfunction register(email, username, password, birthday) {\n  alert(`\n    Email: ${email}\n    Username: ${username}\n    Password hash: ${password.hashCode()}\n    birthday: ${birthday.toDateString()}\n  `)\n}\n\nString.prototype.hashCode = function() {\n  var hash = 0;\n  if (this.length == 0) {\n      return hash;\n  }\n  for (var i = 0; i < this.length; i++) {\n      var char = this.charCodeAt(i);\n      hash = ((hash<<5)-hash)+char;\n      hash = hash & hash; // Convert to 32bit integer\n  }\n  return hash;\n}\n\nexport default Register;","import React, { useState } from 'react';\nimport { Text, TouchableOpacity } from 'react-native';\nimport { BoxedBg, CheckInput } from '../components';\nimport { View } from 'react-native';\nimport { styles } from '../theme';\nimport { Link } from 'react-router-native';\n\nconst Login = () => (\n    <BoxedBg content = {<LoginForm/>}/>\n);\n\nconst LoginForm = () => {\n    const [needsAccount, setNeedsAccount] = useState(false);\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [noEmail, setNoEmail] = useState(false);\n    const [noPassword, setNoPassword] = useState(false);\n    const [forgotPassword, setForgotPassword] = useState(false);\n    const [badCredentials, setBadCredentials] = useState(false);\n    const [emailDoesntExist, setEmailDoesntExist] = useState(false);\n\n    return (\n        <>\n            <View style = {styles.inBox}>\n                <Text\n                    style = {styles.textMain}\n                >\n                    Welcome back!\n                </Text>\n            </View>\n\n            <CheckInput\n                title = 'email'\n                isRequiredError = {noEmail}\n                onChangeText = {(text) => setEmail(text)}\n                errorMessage = {() => badCredentials   ? 'email or password is invalid' \n                                    : emailDoesntExist ? 'email does not exist'\n                                    : null}\n            />\n\n            <CheckInput\n                title = 'password'\n                isRequiredError = {noPassword}\n                secureTextEntry = {true}\n                onChangeText = {(text) => setPassword(text)}\n                errorMessage = {() => badCredentials ? 'email or password is invalid' : null}\n            />\n\n            <View\n                style = {[styles.inBox, {marginTop: -14}]}\n                onMouseEnter = {() => setForgotPassword(true)}\n                onMouseLeave = {() => setForgotPassword(false)}    \n            >\n                <Text\n                    style = {forgotPassword ? [styles.clickableText, styles.clickableTextHover]\n                                            : styles.clickableText}\n                    onPress = {() => {\n                        // reset\n                        setNoPassword(false);\n                        setBadCredentials(false);\n\n                        setNoEmail(!email);\n                        if (email == 'registered@email.com') {\n                            setEmailDoesntExist(false);\n                            alert(`\nWe sent instructions to change your password to\n${email}, please check both your inbox\nand spam folder.\n                            `);\n                        } else {\n                            setEmailDoesntExist(true);\n                        }\n                    }}                            \n                >\n                    Forgot your password?\n                </Text>   \n            </View>\n\n            <View style = {styles.inBox}>\n                <TouchableOpacity\n                    style = {styles.button}\n                    onPress = {() => {\n                        setNoPassword(!password);\n                        setNoEmail(!email);\n\n                        if (!email || !password) {\n                            return;\n                        }\n\n                        if (email == 'registered@email.com' && password == '12345') {\n                            setBadCredentials(false);\n                            alert('successfull login');\n                        } else {\n                            setBadCredentials(true);\n                        }\n                    }}\n                >\n                    <Text style = {styles.buttonText}>\n                        Login\n                    </Text>\n                </TouchableOpacity>\n\n            \n                <Text style = {styles.tosText}>\n                    {'Need an account? '}\n                    <Link\n                        to = '/register'\n                        underlayColor = 'rgba(0, 0, 0, 0)'\n                        onMouseEnter = {() => setNeedsAccount(true)}\n                        onMouseLeave = {() => setNeedsAccount(false)}\n                    >\n                        <Text style = {needsAccount ? [styles.clickableText, styles.clickableTextHover]\n                                                    : styles.clickableText}>\n                            Register\n                        </Text>\n                    </Link>\n                </Text>\n            </View>\n        </>\n    );\n};\nexport default Login;","import React, { useState } from 'react';\nimport { Chat, ChatList } from '../components';\nimport { GiftedChat } from 'react-native-gifted-chat';\nimport { View } from 'react-native';\n\nconst ChatPage = () => {\n  const u2 = {\n    _id: 2,\n    name: 'John Doe',\n    avatar: 'https://external-content.duckduckgo.com/iu/?u=https%3A%2F%2F66.media.tumblr.com%2F71bb701a109cff6608ba24bf7ef3f16e%2Ftumblr_pcchwbaHls1x72ag3o1_1280.png&f=1&nofb=1',\n  };\n  const u1 = {\n    _id: 1,\n    name: 'Robert Henry',\n    avatar: 'https://external-content.duckduckgo.com/iu/?u=https%3A%2F%2Fi.redd.it%2Fqqa16cl4wbd21.png&f=1&nofb=1'\n  };\n\n  const [messages, setMessages] = useState([\n    { _id: 1, text: 'Hey there!', createdAt: new Date(), user: u1 },\n    { _id: 2, text: 'Hello, how are you doing?', createdAt: new Date(), user: u2 },\n    { _id: 3, text: 'I am good, how about you?', createdAt: new Date(), user: u1 },\n    { _id: 4, text: `😊😇`, createdAt: new Date(), user: u1 },\n    { _id: 5, text: `Can't wait to meet you.`, createdAt: new Date(), user: u2 },\n    { _id: 6, text: `That's great, when are you coming?`, createdAt: new Date(), user: u1 },\n    { _id: 7, text: `This weekend.`, createdAt: new Date(), user: u2 },\n    { _id: 8, text: `Around 4 to 6 PM.`, createdAt: new Date(), user: u2 },\n    { _id: 9, text: `Great, don't forget to bring me some mangoes.`, createdAt: new Date(), user: u1 },\n    { _id: 10, text: `Sure!`, createdAt: new Date(), user: u2 },\n    { _id: 11, text: '1', createdAt: new Date(), user: u1},\n    { _id: 12, text: '2', createdAt: new Date(), user: u1},\n    { _id: 13, text: '3', createdAt: new Date(), user: u1},\n    { _id: 14, text: '1', createdAt: new Date(), user: u2},\n    { _id: 15, text: '2', createdAt: new Date(), user: u2},\n    { _id: 16, text: '3', createdAt: new Date(), user: u2},\n  ].reverse());\n\n  function getTime(date) {\n    var hours = date.getHours();\n    var minutes = date.getMinutes();\n    var ampm = hours >= 12 ? 'PM' : 'AM';\n    hours = hours % 12;\n    hours = hours ? hours : 12;\n    minutes = minutes < 10 ? '0' + minutes : minutes;\n    var strTime = hours + ':' + minutes + ' ' + ampm;\n    return strTime;\n  }\n\n  const sendMessage = (messages_ = []) => {\n    setMessages(GiftedChat.append(messages, messages_));\n  }\n\n  const chats = [\n    { _id: 1,\n      name: 'Chat1', \n      avatar: 'https://steamuserimages-a.akamaihd.net/ugc/759346451812931511/D878648B294DA2B94D18893BF363C9084BA1D8F1/?imw=5000&imh=5000&ima=fit&impolicy=Letterbox&imcolor=%23000000&letterbox=false',\n      lastMessage: messages[0],\n    },\n    { _id: 2,\n      name: 'Chat2',\n      avatar: 'https://external-content.duckduckgo.com/iu/?u=https%3A%2F%2Fi.redd.it%2Fqqa16cl4wbd21.png&f=1&nofb=1',\n    },\n    { _id: 3,\n      name: 'Chat3',\n      avatar: 'https://st2.depositphotos.com/1009634/7235/v/950/depositphotos_72350117-stock-illustration-no-user-profile-picture-hand.jpg',\n    },\n    { _id: 4,\n      name: 'Chat4',\n      avatar: 'https://www.neurosciencemarketing.com/wp-content/uploads/2016/08/mona-lisa.jpg',\n    },\n    \n  ];\n\n  return (\n  <View style={{\n    position: 'absolute',\n    inset: '0 0 0 0',// fullscreen\n    display: 'flex',\n    flexDirection: 'row',\n  }}>\n    <ChatList chats={chats}/>\n    <Chat\n      sendMessage={sendMessage}\n      messages={messages}\n      currentUser={u1}\n    />\n  </View>\n  );\n}\n\nexport default ChatPage;","import React from 'react';\nimport { SafeAreaView, View, FlatList, StyleSheet, Text, StatusBar } from 'react-native';\nimport {sizes, colors} from '../theme';\n\nconst Settings = () => {\n    const DATA = [\n        {\n          id: 'bd7acbea-c1b1-46c2-aed5-3ad53abb28ba',\n          title: 'First Item',\n        },\n        {\n          id: '3ac68afc-c605-48d3-a4f8-fbd91aa97f63',\n          title: 'Second Item',\n        },\n        {\n          id: '58694a0f-3da1-471f-bd96-145571e29d72',\n          title: 'Third Item',\n        },\n      ];\n\n      const Item = ({ title }) => (\n        <View style={styles.item}>\n          <Text style={styles.title}>{title}</Text>\n        </View>\n      );\n\n      const renderItem = ({ item }) => (\n        <Item title={item.title} />\n      );\n\n      return (\n        <SafeAreaView style={styles.container}>\n          <FlatList\n            data={DATA}\n            renderItem={renderItem}\n            keyExtractor={item => item.id}\n          />\n        </SafeAreaView>\n      );\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        backgroundColor: '#1e2124',\n        position: 'absolute',\n        inset: '0 0 0 0',// fullscreen\n    },\n    item: {\n      backgroundColor: '#6665d2',\n      borderRadius: sizes.borderRadius,\n      padding: 20,\n      marginVertical: 8,\n      marginHorizontal: 16,\n    },\n    title: {\n      color: colors.white,\n      textAlign: 'center',\n      padding: 10,\n      fontWeight: 'bold',\n      fontSize: 16,\n    },\n  });\n  \nexport default Settings;","import {\n    Route,\n    Link,\n    Routes\n} from 'react-router-dom'\n\nimport Home from './webpages/Home';\nimport Register from './webpages/Register';\nimport Login from './webpages/Login';\nimport Chat from './webpages/Chat'\nimport Settings from './webpages/Settings';\n\nconst App = () => {\n  return (\n    <>\n      <div>\n        <nav>\n          <ul id=\"navigation\">\n            <li>\n              <Link to=\"/\">Home</Link>\n            </li>\n            <li>\n              <Link to=\"/login\">Login</Link>\n            </li>\n            <li>\n              <Link to=\"/register\">Register</Link>\n            </li>\n            <li>\n              <Link to=\"/chat\">Chat</Link>\n            </li>\n            <li>\n              <Link to=\"/settings\">Settings</Link>\n            </li>\n          </ul>\n        </nav>\n      </div>\n      <Routes>\n        <Route path = '/'         element={<Home    />} />\n        <Route path = '/login'    element={<Login   />} />\n        <Route path = '/register' element={<Register/>} />\n        <Route path = '/chat'     element={<Chat    />} />\n        <Route path = '/settings' element={<Settings/>} />\n      </Routes>\n    </>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { HashRouter, Route, Routes } from 'react-router-dom';\n\nReactDOM.render(\n  (\n    <HashRouter>\n      <App/>\n    </HashRouter>\n  ),\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}