{"version":3,"sources":["webpages/Home.js","theme/colors.js","theme/sizes.js","theme/styles.js","components/CheckInput.js","components/BoxedBg.js","webpages/Register.js","webpages/Login.js","App.js","reportWebVitals.js","index.js"],"names":["Home","colors","borderColor","itemBg","white","itemFontColor","errorRed","sizes","height","borderRadius","borderWidth","styles","StyleSheet","create","input","backgroundColor","color","fontSize","borderStyle","picker","fontWeight","box","flexGrow","padding","textMain","textAlign","textInputTitle","textTransform","marginBottom","bg","alignItems","justifyContent","flex","width","resizeMode","position","inset","clickableText","tosText","marginTop","inBox","button","buttonText","clickableTextHover","textDecorationLine","cursor","textInputError","CheckInput","props","errorMessage","isRequiredError","isError","View","style","Text","title","TextInput","spellCheck","onChangeText","secureTextEntry","BoxedBg","ImageBackground","source","process","ScrollView","content","RegisterForm","useState","hasAccount","setHasAccount","isReadingTos","setIsReadingTos","isReadingPp","setIsReadingPp","email","setEmail","username","setUsername","password","setPassword","birthday","setBirthday","birthMonth","setBirthMonth","Date","getFullYear","birthYear","setBirthYear","noEmail","setNoEmail","isEmailValid","setIsEmailValid","isEmailRegistered","setIsEmailRegistered","isValidBirthday","setIsValidBirthday","noUsername","setNoUsername","noPassword","setNoPassword","text","flexDirection","onValueChange","val","id","Item","label","value","marginHorizontal","TouchableOpacity","onPress","noEmail_","isEmailValid_","test","toLowerCase","isEmailRegistered_","birthdate","isValidBirthday_","getDate","getMonth","alert","hashCode","toDateString","register","onMouseEnter","onMouseLeave","to","underlayColor","String","prototype","hash","this","length","i","charCodeAt","Register","LoginForm","needsAccount","setNeedsAccount","forgotPassword","setForgotPassword","badCredentials","setBadCredentials","emailDoesntExist","setEmailDoesntExist","Login","App","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bdd99f00.chunk.js","sourcesContent":["import React from 'react';\nconst Home = () => {\n    return (\n        <div>\n            <h1>App</h1>\n            <p>This is home page</p>\n        </div>\n    );\n};\nexport default Home;","const colors = {\n    borderColor: '#141414',\n    itemBg: '#1e1e1e',\n    white: '#ffffff',\n    itemFontColor: '#707070',\n    errorRed: '#ff1f1f',\n};\n\nexport default colors;","const sizes = {\n    height: 40,\n    borderRadius: 5,\n    borderWidth: 1,\n}\n\nexport default sizes;","import colors from './colors';\nimport sizes from './sizes';\nimport { StyleSheet } from 'react-native';\n\nconst styles = StyleSheet.create({\n    input: {\n        borderWidth: sizes.borderWidth,\n        borderColor: colors.borderColor,\n        borderRadius: sizes.borderRadius,\n        height: sizes.height,\n        backgroundColor: colors.itemBg,\n        color: colors.itemFontColor,\n        fontSize: 18,\n        borderStyle: 'inset',\n    },\n    picker: {\n        backgroundColor: colors.itemBg,\n        borderColor: colors.borderColor,\n        borderWidth: sizes.borderWidth,\n        height: sizes.height,\n        color: colors.itemFontColor,\n        fontWeight: 'bold',\n        borderRadius: sizes.borderRadius,\n        borderStyle: 'inset',\n    },\n    box: {\n        flexGrow: 0,\n        padding: 25,\n        backgroundColor: '#1e2124',\n        borderRadius: 7,\n    },\n    textMain: {\n        color: colors.white,\n        fontSize: 24,\n        fontWeight: 'bold',\n        textAlign: 'center',\n    },\n    textInputTitle: {\n        textTransform: 'uppercase',\n        fontSize: 14,\n        color: colors.itemFontColor,\n        marginBottom: 5,\n        fontWeight: 'bold',\n    },\n    bg: {\n        alignItems: 'center',\n        justifyContent: 'center',\n        flex: 1,\n        height: '100%',\n        width: '100%',\n        resizeMode: 'stretch',\n        position: 'absolute',\n        inset: '0 0 0 0',// fullscreen\n    },\n    clickableText: {\n        color: '#30b2fd',\n    },\n    tosText: {\n        color: '#404040',\n        fontSize: 12,\n        marginTop: 15,\n    },\n    inBox: {\n        padding: 7,\n    },\n    button: {\n        borderRadius: sizes.borderRadius,\n        backgroundColor: '#6665d2',\n        height: sizes.height,\n    },\n    buttonText: {\n        color: colors.white,\n        textAlign: 'center',\n        padding: 10,\n        fontWeight: 'bold',\n    },\n    clickableTextHover: {\n        textDecorationLine: 'underline',\n        cursor: 'pointer',\n    },\n    textInputError: {\n        color : colors.errorRed,\n    }\n});\n\nexport default styles;","import { View, Text, TextInput } from 'react-native';\nimport { styles, colors } from '../theme';\n\nconst CheckInput = (props) => {\n    var errorMessage = props.isRequiredError ? 'this field is required'\n                                                : props.errorMessage?.();\n    var isError = errorMessage != null;\n    return (\n        <View style = {styles.inBox}>\n        <Text style = {styles.textInputTitle}>\n            {props.title}\n            <Text style = {styles.textInputError}>\n            {isError ? \" - \" + errorMessage\n                        : null}\n            </Text>\n        </Text>\n        <TextInput\n            spellCheck = {false}\n            style = {isError ? [styles.input, {borderColor: colors.errorRed, borderWidth: 2}]\n                            : styles.input}\n            onChangeText = {props.onChangeText}\n            secureTextEntry = {props.secureTextEntry ?? null}\n        />\n        </View>\n    )\n};\n\nexport default CheckInput;","import { styles } from \"../theme\";\nimport { ScrollView, ImageBackground } from \"react-native\";\n\nconst bgImage = process.env.PUBLIC_URL + '/assets/images/bg.jpg';\n\nconst BoxedBg = (props) => (\n    <ImageBackground\n        source = {bgImage}\n        style = {styles.bg}\n    >\n        <ScrollView style = {styles.box}>\n            {props.content}\n        </ScrollView>\n    </ImageBackground>\n);\n\nexport default BoxedBg;","import React, { useState } from 'react';\nimport { View, ScrollView, Text, ImageBackground, TouchableOpacity, Image } from 'react-native';\nimport { Picker } from '@react-native-picker/picker';\nimport { Link } from 'react-router-native';\nimport { CheckInput, BoxedBg } from '../components';\nimport { styles } from '../theme';\n\nfunction isEmail(str) {\n  var re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  return re.test(str.toLowerCase());\n}\n\nconst Register = () => (\n  <BoxedBg content = {<RegisterForm/>}/>\n);\n\nconst RegisterForm = () => {\n  const [hasAccount, setHasAccount] = useState(false);\n  const [isReadingTos, setIsReadingTos] = useState(false);\n  const [isReadingPp, setIsReadingPp] = useState(false);\n  const [email, setEmail] = useState();\n  const [username, setUsername] = useState();\n  const [password, setPassword] = useState();\n  // jan 1 of current year\n  const [birthday, setBirthday] = useState(1);\n  const [birthMonth, setBirthMonth] = useState(0);\n  const [birthYear, setBirthYear] = useState(new Date().getFullYear());\n\n  const [noEmail, setNoEmail] = useState(false);\n  const [isEmailValid, setIsEmailValid] = useState(true);\n  const [isEmailRegistered, setIsEmailRegistered] = useState(false);\n  const [isValidBirthday, setIsValidBirthday] = useState(true);\n  const [noUsername, setNoUsername] = useState(false);\n  const [noPassword, setNoPassword] = useState(false);\n\n  return (\n    <>\n      <View style = {styles.inBox}>\n        <Text\n          style = {styles.textMain}\n        >\n          Create an account\n        </Text>\n      </View>\n\n      <CheckInput\n        title = {'email'}\n        isRequiredError = {noEmail}\n        errorMessage = {() => {\n          return !isEmailValid     ? 'please enter an email address'\n               : isEmailRegistered ? 'email address already registered'\n               : null;\n        }}\n        onChangeText = {(text) => setEmail(text)}\n      />\n\n      <CheckInput\n        title = {'username'}\n        isRequiredError = {noUsername}\n        onChangeText = {(text) => setUsername(text)}\n      />\n\n      <CheckInput\n        title = {'password'}\n        isRequiredError = {noPassword}\n        onChangeText = {(text) => setPassword(text)}\n        secureTextEntry = {true}\n      />\n\n      <View style = {styles.inBox}>\n        <Text style = {styles.textInputTitle}>\n          date of birth\n        </Text>\n\n        <View style = {{flexDirection: 'row', width: '100%'}}>\n          {/* Month */}\n          <Picker\n            style = {[styles.picker, {width: '40%'}]}\n            onValueChange = {(val, id) => setBirthMonth(val)}  \n          >\n            <Picker.Item label = 'Jan' value = '0' />\n            <Picker.Item label = 'Feb' value = '1' />\n            <Picker.Item label = 'Mar' value = '2' />\n          </Picker>\n\n          {/* Day */}\n          <Picker\n            style = {[styles.picker, {width: '20%', marginHorizontal: '10%'}]}\n            onValueChange = {(val, id) => setBirthday(val)}  \n          >\n            <Picker.Item label = '1' value = '1' />\n            <Picker.Item label = '2' value = '2' />\n            <Picker.Item label = '3' value = '3' />\n            <Picker.Item label = '28' value = '28' />\n            <Picker.Item label = '29' value = '29' />\n            <Picker.Item label = '30' value = '30' />\n            <Picker.Item label = '31' value = '31' />\n          </Picker>\n\n          {/* Year */}\n          <Picker\n            style = {[styles.picker, {width: '30%'}]}\n            onValueChange = {(val, id) => setBirthYear(val)}\n          >\n            <Picker.Item label = '2021' value = '2021' />\n            <Picker.Item label = '2020' value = '2020' />\n            <Picker.Item label = '2019' value = '2019' />\n          </Picker>\n        </View>\n        <Text style = {styles.textInputError}>\n          {!isValidBirthday ? 'Please enter a valid date of birth'\n                            : null}\n        </Text>\n      </View>\n\n      <View style = {styles.inBox}>\n        <TouchableOpacity\n          style = {styles.button}\n          onPress = {() => {\n            var noEmail_ = email == null || email == '';\n            setNoEmail(noEmail_);\n            var isEmailValid_ = !noEmail_ && isEmail(email);\n            setIsEmailValid(isEmailValid_);\n            var isEmailRegistered_ = isEmailValid_ && email == 'registered@email.com';\n            setIsEmailRegistered(isEmailRegistered_);\n\n            var birthdate = new Date(birthYear, birthMonth, birthday);\n            var isValidBirthday_ = birthdate.getDate() == birthday\n                                && birthdate.getFullYear() == birthYear\n                                && birthdate.getMonth() == birthMonth;\n            setIsValidBirthday(isValidBirthday_);\n\n            var noUsername = username == null || username == '';\n            setNoUsername(noUsername);\n            var noPassword = password == null || password == '';\n            setNoPassword(noPassword);\n\n            if (isEmailValid_ && !isEmailRegistered_ && isValidBirthday_ && !noPassword && !noUsername) {\n              register(email, username, password, birthdate);\n            }\n          }}\n        >\n          <Text style = {styles.buttonText}>\n            Continue\n          </Text>\n        </TouchableOpacity>\n        <Link \n          onMouseEnter = {() => setHasAccount(true)}\n          onMouseLeave = {() => setHasAccount(false)}\n          to='/login'\n          underlayColor = 'rgba(0, 0, 0, 0)'\n        >\n          <Text style = {hasAccount ? [styles.clickableText, styles.clickableTextHover]\n                                    : styles.clickableText}>\n            Already have an account?\n          </Text>    \n        </Link>\n\n        <Text style = {styles.tosText}>\n          {'By registering, you agree to AppName '}\n          <Text\n            onMouseEnter = {() => setIsReadingTos(true)}\n            onMouseLeave = {() => setIsReadingTos(false)}\n            style = {isReadingTos ? [styles.clickableText, styles.clickableTextHover]\n                                  : styles.clickableText}\n            onPress = {() => alert('Redirect to ToS')}\n          >Terms of Service</Text>\n          {' and '} \n          <Text\n            onMouseEnter = {() => setIsReadingPp(true)}\n            onMouseLeave = {() => setIsReadingPp(false)}\n            style = {isReadingPp ? [styles.clickableText, styles.clickableTextHover]\n                                  : styles.clickableText}\n            onPress = {() => alert('Redirect to PP')}\n          >Privacy Policy</Text>\n          .\n        </Text>\n      </View>\n    </>\n  )\n};\n\nfunction register(email, username, password, birthday) {\n  alert(`\n    Email: ${email}\n    Username: ${username}\n    Password hash: ${password.hashCode()}\n    birthday: ${birthday.toDateString()}\n  `)\n}\n\nString.prototype.hashCode = function() {\n  var hash = 0;\n  if (this.length == 0) {\n      return hash;\n  }\n  for (var i = 0; i < this.length; i++) {\n      var char = this.charCodeAt(i);\n      hash = ((hash<<5)-hash)+char;\n      hash = hash & hash; // Convert to 32bit integer\n  }\n  return hash;\n}\n\nexport default Register;","import React, { useState } from 'react';\nimport { Text, TouchableOpacity } from 'react-native';\nimport { BoxedBg, CheckInput } from '../components';\nimport { View } from 'react-native';\nimport { styles } from '../theme';\nimport { Link } from 'react-router-native';\n\nconst Login = () => (\n    <BoxedBg content = {<LoginForm/>}/>\n);\n\nconst LoginForm = () => {\n    const [needsAccount, setNeedsAccount] = useState(false);\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [noEmail, setNoEmail] = useState(false);\n    const [noPassword, setNoPassword] = useState(false);\n    const [forgotPassword, setForgotPassword] = useState(false);\n    const [badCredentials, setBadCredentials] = useState(false);\n    const [emailDoesntExist, setEmailDoesntExist] = useState(false);\n\n    return (\n        <>\n            <View style = {styles.inBox}>\n                <Text\n                    style = {styles.textMain}\n                >\n                    Welcome back!\n                </Text>\n            </View>\n\n            <CheckInput\n                title = 'email'\n                isRequiredError = {noEmail}\n                onChangeText = {(text) => setEmail(text)}\n                errorMessage = {() => badCredentials   ? 'email or password is invalid' \n                                    : emailDoesntExist ? 'email does not exist'\n                                    : null}\n            />\n\n            <CheckInput\n                title = 'password'\n                isRequiredError = {noPassword}\n                secureTextEntry = {true}\n                onChangeText = {(text) => setPassword(text)}\n                errorMessage = {() => badCredentials ? 'email or password is invalid' : null}\n            />\n\n            <View\n                style = {[styles.inBox, {marginTop: -14}]}\n                onMouseEnter = {() => setForgotPassword(true)}\n                onMouseLeave = {() => setForgotPassword(false)}    \n            >\n                <Text\n                    style = {forgotPassword ? [styles.clickableText, styles.clickableTextHover]\n                                            : styles.clickableText}\n                    onPress = {() => {\n                        // reset\n                        setNoPassword(false);\n                        setBadCredentials(false);\n\n                        setNoEmail(!email);\n                        if (email == 'registered@email.com') {\n                            setEmailDoesntExist(false);\n                            alert(`\nWe sent instructions to change your password to\n${email}, please check both your inbox\nand spam folder.\n                            `);\n                        } else {\n                            setEmailDoesntExist(true);\n                        }\n                    }}                            \n                >\n                    Forgot your password?\n                </Text>   \n            </View>\n\n            <View style = {styles.inBox}>\n                <TouchableOpacity\n                    style = {styles.button}\n                    onPress = {() => {\n                        setNoPassword(!password);\n                        setNoEmail(!email);\n\n                        if (!email || !password) {\n                            return;\n                        }\n\n                        if (email == 'registered@email.com' && password == '12345') {\n                            setBadCredentials(false);\n                            alert('successfull login');\n                        } else {\n                            setBadCredentials(true);\n                        }\n                    }}\n                >\n                    <Text style = {styles.buttonText}>\n                        Login\n                    </Text>\n                </TouchableOpacity>\n\n            \n                <Text style = {styles.tosText}>\n                    {'Need an account? '}\n                    <Link\n                        to = '/register'\n                        underlayColor = 'rgba(0, 0, 0, 0)'\n                        onMouseEnter = {() => setNeedsAccount(true)}\n                        onMouseLeave = {() => setNeedsAccount(false)}\n                    >\n                        <Text style = {needsAccount ? [styles.clickableText, styles.clickableTextHover]\n                                                    : styles.clickableText}>\n                            Register\n                        </Text>\n                    </Link>\n                </Text>\n            </View>\n        </>\n    );\n};\nexport default Login;","import {\n    Route,\n    Link,\n    Routes\n} from 'react-router-dom'\n\nimport Home from './webpages/Home';\nimport Register from './webpages/Register';\nimport Login from './webpages/Login';\n\nconst App = () => {\n  return (\n    <>\n      <div>\n        <nav>\n          <ul id=\"navigation\">\n            <li>\n              <Link to=\"/\">Home</Link>\n            </li>\n            <li>\n              <Link to=\"/Login\">Login</Link>\n            </li>\n            <li>\n              <Link to=\"/Register\">Register</Link>\n            </li>\n          </ul>\n        </nav>\n      </div>\n      <Routes>\n        <Route path = '/'         element={<Home    />} />\n        <Route path = '/login'    element={<Login   />} />\n        <Route path = '/register' element={<Register/>} />\n      </Routes>\n    </>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { HashRouter, Route, Routes } from 'react-router-dom';\n\nimport Home from './webpages/Home';\nimport Login from './webpages/Login';\nimport Register from './webpages/Register';\n\nReactDOM.render(\n  (\n    <HashRouter>\n      <App/>\n    </HashRouter>\n  ),\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}